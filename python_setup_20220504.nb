(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     84724,       1860]
NotebookOptionsPosition[     79500,       1765]
NotebookOutlinePosition[     79905,       1781]
CellTagsIndexPosition[     79862,       1778]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Functions", "Section",
 CellChangeTimes->{{3.824510222643527*^9, 
  3.824510223670834*^9}},ExpressionUUID->"17dbb4a9-2205-4ae3-b65e-\
1ac14b8e021f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Py", "[", "ex_", "]"}], ":=", 
  RowBox[{"ExportString", "[", 
   RowBox[{"ex", ",", "\"\<PythonExpression\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8245102246290245`*^9, 3.8245102246574535`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"53dc3f67-2ce9-4343-95c4-12164358077b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ArrToStrPyOld", "[", "arr_", "]"}], ":=", 
   RowBox[{"\"\<[\>\"", "<>", 
    RowBox[{"StringTrim", "@", 
     RowBox[{"StringJoin", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\"\<, \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"#", ",", "InputForm"}], "]"}]}], "&"}], "/@", "arr"}], 
      "]"}]}], "<>", "\"\<]\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8245087393914633`*^9, 3.8245087669500685`*^9}, 
   3.82451075992731*^9, {3.8245113471293006`*^9, 3.8245113474559517`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"f6f60b82-47bc-4ecd-9090-14240a1fd3aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ArrToStrPy", "[", "arr_", "]"}], ":=", 
   RowBox[{"\"\<[\>\"", "<>", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{
         "arr", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], "]"}],
         "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", "<", 
           RowBox[{"Length", "[", "arr", "]"}]}], ",", "\"\<, \>\"", ",", 
          "\"\<\>\""}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "arr", "]"}]}], "}"}]}], "]"}], "]"}], "<>", 
    "\"\<]\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8245109780782375`*^9, 3.8245109890927916`*^9}, {
  3.824511030036851*^9, 3.8245110624769955`*^9}, {3.8245111620682597`*^9, 
  3.824511345418638*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"434ba847-9258-49cd-aa8c-195907357adc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"readPython", "[", "filename_", "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"ExternalEvaluate", "[", 
     RowBox[{"sessPy", ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<np.load(\>\"", "<>", 
       RowBox[{"Py", "[", 
        RowBox[{
         RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\\\\\>\"", "<>", 
         "filename"}], "]"}], "<>", "\"\<)\>\""}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8379560632335663`*^9, 3.837956094088735*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"384abfbc-3060-4eca-b1af-f42e04ab007a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrToStrPy2", "[", "paramDiv", "]"}]], "Input",
 CellChangeTimes->{{3.8245113134225593`*^9, 3.8245113201392865`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"89d65ea3-6c91-45f3-86ce-7aa385b9142e"],

Cell[BoxData[
 RowBox[{"ArrToStrPy2", "[", "paramDiv", "]"}]], "Output",
 CellChangeTimes->{{3.824511320678381*^9, 3.82451134186456*^9}, 
   3.824671056771495*^9, 3.8351245211488805`*^9, 3.837862294663557*^9, {
   3.8383106519118023`*^9, 3.8383106605837984`*^9}, 3.838310704752384*^9, 
   3.8383109708051963`*^9, 3.8421247063799973`*^9, 3.844539253724265*^9, 
   3.8447976203307605`*^9, 3.84496322970388*^9, 3.845324323165859*^9, 
   3.847826152808264*^9, 3.848561604807829*^9, 3.849307002238453*^9, 
   3.8494934538699713`*^9, 3.849579076746434*^9, 3.8495983740108376`*^9, 
   3.8495986061277*^9, 3.8496441418192096`*^9, 3.849669461876625*^9, 
   3.851375220294218*^9, 3.8514608230932913`*^9, 3.8527366107229376`*^9, 
   3.8529217049871097`*^9, 3.858092926097463*^9, 3.8595585918043056`*^9, 
   3.8601711942403994`*^9, 3.860503669507362*^9, 3.8605037178669767`*^9, 
   3.860689050459262*^9, 3.863527875139022*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"71941df2-d20b-4bcd-9c4e-dbb1f2d9772c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ToString", "[", "#", "]"}], "&"}], "/@", "paramDiv"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.824510817567704*^9, 3.8245108612846217`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"75ced92a-2e08-4f98-8656-73fc8cc3b092"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"StringJoin\\\", \\\"[\\\", \\\"paramDiv\\\", \\\"]\\\"}]\
\\).\"", 2, 6, 1, 27567939672302127500, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8478261528902674`*^9, 3.848561604849831*^9, 
  3.849307002295438*^9, 3.849493453990964*^9, 3.849579076793436*^9, 
  3.8495983740539045`*^9, 3.849598606222703*^9, 3.849644141890306*^9, 
  3.849669461965618*^9, 3.8513752203282614`*^9, 3.851460823137291*^9, 
  3.852736610834491*^9, 3.8529217050491076`*^9, 3.8580929261423445`*^9, 
  3.859558591857164*^9, 3.8601711943145404`*^9, 3.860503669575199*^9, 
  3.8605037179298086`*^9, 3.860689050800741*^9, 3.863527875204856*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"115caff5-bb8b-4e8e-8296-04f649a80b97"],

Cell[BoxData[
 RowBox[{"StringJoin", "[", "paramDiv", "]"}]], "Output",
 CellChangeTimes->{{3.824510830750594*^9, 3.8245108619857435`*^9}, 
   3.8246710568373184`*^9, 3.835124521280528*^9, 3.837862294778558*^9, {
   3.838310651987835*^9, 3.838310660656801*^9}, 3.838310704830361*^9, 
   3.838310970961218*^9, 3.842124706468953*^9, 3.844539253832266*^9, 
   3.844797620499759*^9, 3.8449632298132315`*^9, 3.8453243232472725`*^9, 
   3.847826152924307*^9, 3.848561604857826*^9, 3.8493070023101573`*^9, 
   3.8494934540109577`*^9, 3.849579076804438*^9, 3.849598374062877*^9, 
   3.8495986062497*^9, 3.849644141917206*^9, 3.849669461980666*^9, 
   3.8513752203362865`*^9, 3.8514608231453123`*^9, 3.8527366108564854`*^9, 
   3.852921705073107*^9, 3.8580929261533146`*^9, 3.8595585918741155`*^9, 
   3.8601711943265047`*^9, 3.860503669593133*^9, 3.8605037179572487`*^9, 
   3.860689050817152*^9, 3.8635278752208157`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"5513220e-a481-497e-ad50-0ecaaacd83e3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Environment setup", "Section",
 CellChangeTimes->{{3.824512285365329*^9, 
  3.824512287302496*^9}},ExpressionUUID->"e34f42be-c76c-4099-b140-\
baaa24e3023a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8245122907896557`*^9, 3.8245122936365337`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"008d6b79-a114-4f3a-aeed-33b8ddc7f684"],

Cell[BoxData["\<\"D:\\\\Ohdraw.niL\\\\Google_drive\\\\Programming\\\\Julia\\\\\
Modules\"\>"], "Output",
 CellChangeTimes->{
  3.8245122941691027`*^9, 3.824671089275849*^9, 3.835124531019515*^9, 
   3.8378610626067505`*^9, 3.8383106970403605`*^9, 3.8383109744587526`*^9, 
   3.844539257691388*^9, 3.844797625132769*^9, 3.8449632334300766`*^9, 
   3.84532432703133*^9, 3.847826157948262*^9, 3.848561612410904*^9, 
   3.8493070063902903`*^9, {3.849493777978397*^9, 3.8494937968096457`*^9}, 
   3.849579082295595*^9, 3.849598381493102*^9, 3.849598614136083*^9, 
   3.8496441556673512`*^9, 3.8496694678391356`*^9, 3.8506882322197924`*^9, 
   3.8513752243164606`*^9, 3.8514608297474036`*^9, 3.8527368134516068`*^9, 
   3.852921714354332*^9, 3.858092952849635*^9, 3.8595585986202183`*^9, 
   3.8601712031428914`*^9, 3.8605036809836397`*^9, 3.860689053935812*^9, {
   3.863527882553047*^9, 3.8635278968778687`*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"1c65dfbb-51f7-40e9-9969-b71c5190a7bb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"texStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"FontWeight", "\[Rule]", " ", "\"\<Plain\>\""}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8245170299759636`*^9, 3.8245170300108676`*^9}, {
   3.824517914731312*^9, 3.8245179151089077`*^9}, {3.824518701597248*^9, 
   3.82451870297586*^9}, {3.824518896664835*^9, 3.824518910914926*^9}, 
   3.8245189419570017`*^9, {3.849588570579691*^9, 3.8495885713151474`*^9}, 
   3.849589279668713*^9, {3.86069656329928*^9, 3.8606965729141045`*^9}, {
   3.8635284580365744`*^9, 3.863528487524147*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"51631f1d-373e-4306-ac4c-da9622763a88"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"titleMag", "=", "1.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labMag", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labMagSmall", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tickMag", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataThick", "=", 
   RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legMkSz", "=", "22"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fenceW", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"darkRed", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.8", ",", "0", ",", "0"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8495981641415653`*^9, 3.849598174069401*^9}, {
  3.8496441476052437`*^9, 3.849644151135173*^9}, {3.851399665671551*^9, 
  3.851399670791641*^9}, {3.8514014907078648`*^9, 3.8514014943568106`*^9}, {
  3.8514994675216045`*^9, 3.851499472905104*^9}, {3.8515054817710176`*^9, 
  3.8515054841807456`*^9}, {3.851834733113659*^9, 3.8518347357252846`*^9}, {
  3.851836349058404*^9, 3.8518363493894033`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"58c0709b-769a-475d-91bd-fc09a0310565"],

Cell[BoxData[
 RowBox[{"<<", "MaTeX`"}]], "Input",
 CellChangeTimes->{{3.8246711045639367`*^9, 3.8246711082071953`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"167e8407-505f-4875-94f1-a95313d4dd9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"MaTeX", ",", 
   RowBox[{"\"\<Preamble\>\"", "\[Rule]", 
    RowBox[{"{", "\"\<\\\\usepackage{color,txfonts}\>\"", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8518363534374256`*^9, 3.8518363534664707`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"b2874e24-0800-42d8-a9d8-3d209bae2d17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BasePreamble\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"\\\\usepackage{lmodern,exscale}\"\>", 
      ",", "\<\"\\\\usepackage{amsmath,amssymb}\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"Preamble\"\>", "\[Rule]", 
    RowBox[{"{", "\<\"\\\\usepackage{color,txfonts}\"\>", "}"}]}], ",", 
   RowBox[{"\<\"DisplayStyle\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"ContentPadding", "\[Rule]", "True"}], ",", 
   RowBox[{"LineSpacing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.2`", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
   RowBox[{"Magnification", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"LogFileFunction\"\>", "\[Rule]", "None"}], ",", 
   RowBox[{"\<\"TeXFileFunction\"\>", "\[Rule]", "None"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8518363546025877`*^9, 3.852736814475534*^9, 
  3.8529217158929653`*^9, 3.858092954231943*^9, 3.8595586007977552`*^9, 
  3.860171204417078*^9, 3.8605036890324984`*^9, 3.8606890555437374`*^9, 
  3.863527898623046*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"f8ef9de2-cd71-48b6-8084-7baa76427af2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"MaTeX", ",", 
   RowBox[{"\"\<FontSize\>\"", "\[Rule]", "12"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8606909709848056`*^9, 3.860690988838002*^9}, {
  3.8606913748551016`*^9, 3.8606913750452833`*^9}, {3.8606965565950284`*^9, 
  3.860696556897904*^9}, {3.8635284014307194`*^9, 3.8635284016191573`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"042688be-73a4-4df2-9689-7a863c99e11e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BasePreamble\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"\\\\usepackage{lmodern,exscale}\"\>", 
      ",", "\<\"\\\\usepackage{amsmath,amssymb}\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"Preamble\"\>", "\[Rule]", 
    RowBox[{"{", "\<\"\\\\usepackage{color,txfonts}\"\>", "}"}]}], ",", 
   RowBox[{"\<\"DisplayStyle\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"ContentPadding", "\[Rule]", "True"}], ",", 
   RowBox[{"LineSpacing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.2`", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
   RowBox[{"Magnification", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"LogFileFunction\"\>", "\[Rule]", "None"}], ",", 
   RowBox[{"\<\"TeXFileFunction\"\>", "\[Rule]", "None"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8606910022843504`*^9, 3.860691375517753*^9, 
  3.860696557479397*^9, 3.863527898695849*^9, 3.8635284021437006`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"be5abb76-0552-48a3-b688-d85838f88b04"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"$FrontEndSession", ",", 
   RowBox[{"PrintingStyleEnvironment", "\[Rule]", "\"\<Working\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.860695064137703*^9, 3.860695064171611*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9a910975-402b-479b-8722-092477c08978"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Python start session", "Section",
 CellChangeTimes->{{3.8245119132853203`*^9, 
  3.8245119159239807`*^9}},ExpressionUUID->"31ea896f-e0e7-4d42-92e6-\
eea6d780b751"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sessPy", "=", 
   RowBox[{"StartExternalSession", "[", "\"\<Python\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.824511916644121*^9, 3.824511920836331*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"35589180-b598-4001-bc20-e067313333dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"sessPy", ",", " ", "\"\<sys.path.insert(1, '')\>\""}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8245119378386545`*^9, 3.8245119431608667`*^9}, 
   3.824512188327597*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"3955dd41-c553-4655-8b0a-ce1ff7c72d35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"sessPy", ",", "\"\<import numpy as np\>\""}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8245121928834333`*^9, 3.824512196372471*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"202ca8a4-a0f5-4997-b5ac-bbc80677351c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["File name functions", "Section",
 CellChangeTimes->{{3.844821394813873*^9, 
  3.8448213979534855`*^9}},ExpressionUUID->"0075eb51-89fc-405f-8715-\
0beb51b55792"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nameAppend", "[", 
    RowBox[{"arr_", ",", "app_"}], "]"}], ":=", 
   RowBox[{"arr", "<>", "\"\<_\>\"", "<>", "app"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8245091755187964`*^9, 3.8245091894282403`*^9}, {
  3.8245104160844364`*^9, 3.8245104396526985`*^9}, {3.8245105182040987`*^9, 
  3.8245105191570625`*^9}, {3.8245106027342815`*^9, 3.824510610597381*^9}, {
  3.824510674057437*^9, 3.8245106755083513`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"cc838347-a540-4cc6-b15c-2c02196b655a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npyType", "=", "\"\<.npy\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"jpgType", "=", "\"\<.jpg\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.8245081070694914`*^9, 3.824508111816057*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"cea2f6d5-e576-40d1-b118-0d51607e3efb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cm", "=", 
   RowBox[{"72", "/", "2.54"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8495885272197824`*^9, 3.849588530715481*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"25c0cc05-a550-4b72-a0b7-2d2aae4daf29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[RawEscape]", "\[RawEscape]", "\[RawEscape]", "\[RawEscape]", 
  "\[RawEscape]", "\[RawEscape]", "\[RawEscape]", "\[RawEscape]", 
  "\[RawEscape]", "\[RawEscape]", "\[RawEscape]", "\[RawEscape]", 
  "\[RawEscape]", "\[RawEscape]", "\[RawEscape]", "\[RawEscape]", 
  "\[RawEscape]", "\[RawEscape]", "\[RawEscape]", "\[RawEscape]", 
  "\[RawEscape]", "\.08", "\.08", "\.08", "\.08", "\.08", "\.08", "\.08", 
  "\.08", "\.08"}]], "Input",
 CellChangeTimes->{{3.8506874803857927`*^9, 3.850687491338997*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"7cc86477-a7ba-4837-bd1b-835621ae0ba2"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\.08", "9"], " ", 
  SuperscriptBox["\[RawEscape]", "21"]}]], "Output",
 CellChangeTimes->{3.851375248124493*^9, 3.851460858516343*^9, 
  3.852736838563037*^9, 3.852921737856454*^9, 3.85955862737782*^9, 
  3.860171229196205*^9, 3.860503739743478*^9, 3.8606891382423134`*^9, 
  3.8635280095346904`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"6803340e-6a71-4488-8f1b-1df4fb5cac01"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"815130bf-313e-46d3-9166-236a8a6413cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting functions", "Section",
 CellChangeTimes->{{3.8518973790238113`*^9, 
  3.851897381137249*^9}},ExpressionUUID->"cfa3a635-c940-49ff-b88b-\
c177e0afe115"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getMaxPadding", "[", "p_List", "]"}], ":=", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"Max", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"BorderDimensions", "@", 
           RowBox[{"Image", "[", 
            RowBox[{"Show", "[", 
             RowBox[{"#", ",", 
              RowBox[{"LabelStyle", "\[Rule]", "White"}], ",", 
              RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "]"}]}], 
          "&"}], "/@", "p"}], ")"}], "~", "Flatten", "~", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "+", "1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.851897381842986*^9, 3.851897384226859*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"9c3b6c32-7690-43be-85ba-9d75a0928538"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Subcaption", "Section",
 CellChangeTimes->{{3.849588522706287*^9, 3.849588524679265*^9}, {
  3.8517915469493723`*^9, 
  3.8517915487047653`*^9}},ExpressionUUID->"b5e16e8e-42d8-4475-947a-\
430adea71b48"],

Cell[BoxData[
 RowBox[{
  RowBox[{"capTex", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MaTeX", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Magnification", "\[Rule]", "titleMag"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\\\\mathrm{(a)}\>\"", ",", "\"\<\\\\mathrm{(b)}\>\"", ",", 
      "\"\<\\\\mathrm{(c)}\>\""}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.851791622669512*^9, 3.851791631354542*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"8677e103-a275-459b-a743-cd16732b0e79"]
}, Open  ]],

Cell[CellGroupData[{

Cell["One time setup for Python", "Section",
 CellChangeTimes->{{3.8421246805518074`*^9, 
  3.842124685572817*^9}},ExpressionUUID->"90765703-226a-412d-8f38-\
2d2e1028c059"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindExternalEvaluators", "[", "\"\<Python\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8421246866458073`*^9, 3.842124686677812*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"fe740601-e783-49bb-801d-abcd085d73d0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "49144367-4428-4e2c-bce2-77e66f775641" -> 
       Association[
        "System" -> "Python", "Version" -> "3.7.3", "Target" :> 
         "C:\\ProgramData\\Anaconda3\\python.exe", "Executable" :> 
         "C:\\ProgramData\\Anaconda3\\python.exe", "Registered" -> True]], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "System"} -> 
        1, {All, "Version"} -> 1, {All, "Target"} -> 1, {All, "Executable"} -> 
        1, {All, "Registered"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[345.6], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "System" -> TypeSystem`PackageScope`AtomShape[57.60000000000001], 
             "Version" -> 
             TypeSystem`PackageScope`AtomShape[48.00000000000001], "Target" -> 
             TypeSystem`PackageScope`AtomShape[336.00000000000006`], 
             "Executable" -> 
             TypeSystem`PackageScope`AtomShape[336.00000000000006`], 
             "Registered" -> TypeSystem`PackageScope`AtomShape[36]]], 
           DirectedInfinity[1], 5, {All}]]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "System", "Version", "Target", "Executable", "Registered"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1], "Meta" -> 
     Association[HiddenItems -> {"Executable"}], "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "System"} -> 
        1, {All, "Version"} -> 1, {All, "Target"} -> 1, {All, "Executable"} -> 
        1, {All, "Registered"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[345.6], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "System" -> TypeSystem`PackageScope`AtomShape[57.60000000000001], 
             "Version" -> 
             TypeSystem`PackageScope`AtomShape[48.00000000000001], "Target" -> 
             TypeSystem`PackageScope`AtomShape[336.00000000000006`], 
             "Executable" -> 
             TypeSystem`PackageScope`AtomShape[336.00000000000006`], 
             "Registered" -> TypeSystem`PackageScope`AtomShape[36]]], 
           DirectedInfinity[1], 5, {All}]]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "System", "Version", "Target", "Executable", "Registered"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 1, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> 
     Association[
      "49144367-4428-4e2c-bce2-77e66f775641" -> 
       Association[
        "System" -> False, "Version" -> False, "Target" -> False, 
         "Executable" -> True, "Registered" -> False]], "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["System", 
                  Style[
                  "System", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "System"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "System"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Version", 
                  Style[
                  "Version", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Version"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Version"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Target", 
                  Style[
                  "Target", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Target"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Target"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Annotation[
              Pane[
               Button[
                Tooltip[
                 Mouseover[
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   GrayLevel[0.6]], 
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   RGBColor[
                   0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Executable", 
                    Style[
                    "Executable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Executable"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "Executable"}, "ColumnHeader", True], "Mouse"]], 
                TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                 All, "Executable"}, "remove"], Appearance -> None, BaseStyle -> 
                None], ImageSize -> {{5, Full}, Automatic}, 
               ImageMargins -> {{3, 2}, {0, 0}}], 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
               All, "Executable"}, "ColumnHeader", False], "Mouse"], 
             Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Registered", 
                  Style[
                  "Registered", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Registered"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Registered"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["49144367-4428-4e2c-bce2-77e66f775641", 
                  Style[
                  "49144367-4428-4e2c-bce2-77e66f775641", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["49144367-4428-4e2c-bce2-77e66f775641"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["49144367-4428-4e2c-bce2-77e66f775641"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{345.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Python", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["49144367-4428-4e2c-bce2-77e66f775641"], 
                 Key["System"]}, "Item", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.7.3", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["49144367-4428-4e2c-bce2-77e66f775641"], 
                 Key["Version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C:\\ProgramData\\Anaconda3\\python.exe", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["49144367-4428-4e2c-bce2-77e66f775641"], 
                 Key["Target"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Annotation[
              Pane[
               Button[
                Tooltip[
                 Mouseover[
                  Style[
                  "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]", 
                   GrayLevel[0.6]], 
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   RGBColor[
                   0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                 Annotation["C:\\ProgramData\\Anaconda3\\python.exe", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["49144367-4428-4e2c-bce2-77e66f775641"], 
                    Key["Executable"]}, "Item", False], "Mouse"]], 
                TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  Key["49144367-4428-4e2c-bce2-77e66f775641"], 
                  Key["Executable"]}, "remove"], Appearance -> None, 
                BaseStyle -> None], ImageSize -> {{5, Full}, Automatic}, 
               ImageMargins -> {{3, 2}, {0, 0}}], 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                Key["49144367-4428-4e2c-bce2-77e66f775641"], 
                Key["Executable"]}, "Item", False], "Mouse"], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["49144367-4428-4e2c-bce2-77e66f775641"], 
                 Key["Registered"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{752., {39., 45.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{752., {39., 45.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8421246993003635`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"ac1a506a-f727-44b2-bab5-354b4497a25d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["One time MaTeX conflict", "Section",
 CellChangeTimes->{{3.8453261184942427`*^9, 
  3.8453261256326046`*^9}},ExpressionUUID->"841be0db-fc7d-4d0e-8694-\
5934490dbd87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Clear", "[", "MaTeX", "]"}]], "Input",
 CellChangeTimes->{{3.8453261279561872`*^9, 3.845326131380799*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"d62423d8-ceee-4b40-b44e-09c20bfcef1e"],

Cell[BoxData[
 TemplateBox[{
  "Clear", "wrsym", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"MaTeX\\\"}]\\) is Protected.\"", 2, 52, 6, 
   27475861668814141976, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.845326132231804*^9, {3.8494937866289597`*^9, 3.849493788630027*^9}},
 CellLabel->
  "\:8a08\:7b97\:4e2d\:ff1aIn[52]:=",ExpressionUUID->"a83abccb-4c1d-4f5c-89ac-\
774ca1f17b1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ColorData", "[", "112", "]"}], "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"Table", "[", 
   RowBox[{"ii", ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8513988102603636`*^9, 3.851398857216217*^9}, {
  3.851398985386309*^9, 3.8513990811834736`*^9}, {3.851399140906369*^9, 
  3.851399150328591*^9}, {3.85139921471066*^9, 3.8513992153730516`*^9}},
 CellLabel->
  "In[727]:=",ExpressionUUID->"15163f3d-0281-4b33-82f9-661b0b18e9d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.790588, 0.201176, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.5270586666666667, 0.13411733333333334`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.790588`", ",", "0.201176`", ",", "0.`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.790588, 0.201176, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.790588, 0.201176, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.192157, 0.388235, 0.807843], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.12810466666666667`, 0.25882333333333335`, 0.538562],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.192157`", ",", "0.388235`", ",", "0.807843`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.192157, 0.388235, 0.807843]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.192157, 0.388235, 0.807843],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.607843, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.4052286666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1.`", ",", "0.607843`", ",", "0.`"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.607843, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.607843, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.596078, 0.109804], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.39738533333333337`, 0.07320266666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.`", ",", "0.596078`", ",", "0.109804`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.596078, 0.109804]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.596078, 0.109804],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.567426, 0.32317, 0.729831], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.378284, 0.21544666666666668`, 0.48655400000000004`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.567426`", ",", "0.32317`", ",", "0.729831`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.567426, 0.32317, 0.729831]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.567426, 0.32317, 0.729831],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.588235, 0.705882], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.39215666666666665`, 0.470588],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.`", ",", "0.588235`", ",", "0.705882`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.588235, 0.705882]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.588235, 0.705882],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8505, 0.4275, 0.13185], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.5670000000000001, 0.28500000000000003`, 0.0879],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.8505`", ",", "0.4275`", ",", "0.13185`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.8505, 0.4275, 0.13185]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8505, 0.4275, 0.13185],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.499929, 0.285875, 0.775177], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.333286, 0.19058333333333333`, 0.5167846666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.499929`", ",", "0.285875`", ",", "0.775177`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.499929, 0.285875, 0.775177]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.499929, 0.285875, 0.775177],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.12490296143062507`, 0.63, 0.47103259454284074`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.08326864095375006, 0.42000000000000004`, 0.3140217296952272],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.12490296143062507`", ",", "0.63`", ",", "0.47103259454284074`"}],
          "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.12490296143062507`, 0.63, 0.47103259454284074`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.12490296143062507`, 0.63, 0.47103259454284074`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.823948950768196, 0.29474475384097976`, 0.19291741323314934`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5492993005121307, 0.19649650256065318`, 0.12861160882209957`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.823948950768196`", ",", "0.29474475384097976`", ",", 
           "0.19291741323314934`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.823948950768196, 0.29474475384097976`, 0.19291741323314934`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.823948950768196, 0.29474475384097976`, 0.19291741323314934`],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.8513988167607064`*^9, 3.8513988577066026`*^9}, {
   3.8513989859669495`*^9, 3.851399081744725*^9}, {3.851399142720473*^9, 
   3.8513991507902927`*^9}, 3.851399215711173*^9},
 CellLabel->
  "Out[727]=",ExpressionUUID->"e39f10ef-558e-4ed4-8637-53d596296c7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", 
  RowBox[{"Notebook", ",", " ", "PrintingStyleEnvironment"}], "]"}]], "Input",
 CellChangeTimes->{{3.860695032931389*^9, 3.8606950426262126`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"a915c8be-24a0-4fd7-ae83-6787aa8e7f13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"PrintingStyleEnvironment", "\[Rule]", "\<\"Working\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.860695040883238*^9, 3.860695068379678*^9}, 
   3.8635283691208477`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"5ea9f977-4dd1-4e5e-8508-4ca7dad46fda"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{709, 332},
WindowMargins->{{115, Automatic}, {Automatic, 54.5}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a19fef12-c4d5-44aa-ae27-791851ddc741"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 154, 3, 67, "Section",ExpressionUUID->"17dbb4a9-2205-4ae3-b65e-1ac14b8e021f"],
Cell[737, 27, 316, 6, 28, "Input",ExpressionUUID->"53dc3f67-2ce9-4343-95c4-12164358077b"],
Cell[1056, 35, 641, 15, 48, "Input",ExpressionUUID->"f6f60b82-47bc-4ecd-9090-14240a1fd3aa"],
Cell[1700, 52, 968, 25, 68, "Input",ExpressionUUID->"434ba847-9258-49cd-aa8c-195907357adc"],
Cell[2671, 79, 603, 14, 48, "Input",ExpressionUUID->"384abfbc-3060-4eca-b1af-f42e04ab007a"],
Cell[CellGroupData[{
Cell[3299, 97, 219, 3, 28, "Input",ExpressionUUID->"89d65ea3-6c91-45f3-86ce-7aa385b9142e"],
Cell[3521, 102, 992, 14, 32, "Output",ExpressionUUID->"71941df2-d20b-4bcd-9c4e-dbb1f2d9772c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4550, 121, 299, 7, 28, "Input",ExpressionUUID->"75ced92a-2e08-4f98-8656-73fc8cc3b092"],
Cell[4852, 130, 892, 16, 22, "Message",ExpressionUUID->"115caff5-bb8b-4e8e-8296-04f649a80b97"],
Cell[5747, 148, 991, 14, 32, "Output",ExpressionUUID->"5513220e-a481-497e-ad50-0ecaaacd83e3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6787, 168, 162, 3, 67, "Section",ExpressionUUID->"e34f42be-c76c-4099-b140-baaa24e3023a"],
Cell[CellGroupData[{
Cell[6974, 175, 252, 4, 28, "Input",ExpressionUUID->"008d6b79-a114-4f3a-aeed-33b8ddc7f684"],
Cell[7229, 181, 986, 14, 32, "Output",ExpressionUUID->"1c65dfbb-51f7-40e9-9969-b71c5190a7bb"]
}, Open  ]],
Cell[8230, 198, 794, 15, 28, "Input",ExpressionUUID->"51631f1d-373e-4306-ac4c-da9622763a88"],
Cell[9027, 215, 1231, 27, 165, "Input",ExpressionUUID->"58c0709b-769a-475d-91bd-fc09a0310565"],
Cell[10261, 244, 199, 3, 28, "Input",ExpressionUUID->"167e8407-505f-4875-94f1-a95313d4dd9c"],
Cell[CellGroupData[{
Cell[10485, 251, 348, 7, 28, "Input",ExpressionUUID->"b2874e24-0800-42d8-a9d8-3d209bae2d17"],
Cell[10836, 260, 1130, 22, 91, "Output",ExpressionUUID->"f8ef9de2-cd71-48b6-8084-7baa76427af2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12003, 287, 437, 7, 28, "Input",ExpressionUUID->"042688be-73a4-4df2-9689-7a863c99e11e"],
Cell[12443, 296, 1030, 20, 91, "Output",ExpressionUUID->"be5abb76-0552-48a3-b688-d85838f88b04"]
}, Open  ]],
Cell[13488, 319, 316, 6, 28, "Input",ExpressionUUID->"9a910975-402b-479b-8722-092477c08978"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13841, 330, 169, 3, 67, "Section",ExpressionUUID->"31ea896f-e0e7-4d42-92e6-eea6d780b751"],
Cell[14013, 335, 281, 6, 28, "Input",ExpressionUUID->"35589180-b598-4001-bc20-e067313333dc"],
Cell[14297, 343, 328, 7, 28, "Input",ExpressionUUID->"3955dd41-c553-4655-8b0a-ce1ff7c72d35"],
Cell[14628, 352, 291, 6, 28, "Input",ExpressionUUID->"202ca8a4-a0f5-4997-b5ac-bbc80677351c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14956, 363, 166, 3, 67, "Section",ExpressionUUID->"0075eb51-89fc-405f-8715-0beb51b55792"],
Cell[15125, 368, 539, 10, 28, "Input",ExpressionUUID->"cc838347-a540-4cc6-b15c-2c02196b655a"],
Cell[15667, 380, 301, 6, 48, "Input",ExpressionUUID->"cea2f6d5-e576-40d1-b118-0d51607e3efb"],
Cell[15971, 388, 243, 5, 28, "Input",ExpressionUUID->"25c0cc05-a550-4b72-a0b7-2d2aae4daf29"],
Cell[CellGroupData[{
Cell[16239, 397, 607, 9, 28, "Input",ExpressionUUID->"7cc86477-a7ba-4837-bd1b-835621ae0ba2"],
Cell[16849, 408, 422, 8, 32, "Output",ExpressionUUID->"6803340e-6a71-4488-8f1b-1df4fb5cac01"]
}, Open  ]],
Cell[17286, 419, 105, 1, 28, "Input",ExpressionUUID->"815130bf-313e-46d3-9166-236a8a6413cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17428, 425, 165, 3, 67, "Section",ExpressionUUID->"cfa3a635-c940-49ff-b88b-c177e0afe115"],
Cell[17596, 430, 914, 24, 87, "Input",ExpressionUUID->"9c3b6c32-7690-43be-85ba-9d75a0928538"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18547, 459, 208, 4, 67, "Section",ExpressionUUID->"b5e16e8e-42d8-4475-947a-430adea71b48"],
Cell[18758, 465, 517, 13, 77, "Input",ExpressionUUID->"8677e103-a275-459b-a743-cd16732b0e79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19312, 483, 172, 3, 67, "Section",ExpressionUUID->"90765703-226a-412d-8f38-2d2e1028c059"],
Cell[CellGroupData[{
Cell[19509, 490, 234, 3, 28, "Input",ExpressionUUID->"fe740601-e783-49bb-801d-abcd085d73d0"],
Cell[19746, 495, 39772, 720, 103, "Output",ExpressionUUID->"ac1a506a-f727-44b2-bab5-354b4497a25d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59567, 1221, 172, 3, 67, "Section",ExpressionUUID->"841be0db-fc7d-4d0e-8694-5934490dbd87"],
Cell[CellGroupData[{
Cell[59764, 1228, 209, 3, 28, "Input",ExpressionUUID->"d62423d8-ceee-4b40-b44e-09c20bfcef1e"],
Cell[59976, 1233, 404, 10, 22, "Message",ExpressionUUID->"a83abccb-4c1d-4f5c-89ac-774ca1f17b1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60417, 1248, 555, 13, 28, "Input",ExpressionUUID->"15163f3d-0281-4b33-82f9-661b0b18e9d5"],
Cell[60975, 1263, 17900, 481, 32, "Output",ExpressionUUID->"e39f10ef-558e-4ed4-8637-53d596296c7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78912, 1749, 265, 4, 28, "Input",ExpressionUUID->"a915c8be-24a0-4fd7-ae83-6787aa8e7f13"],
Cell[79180, 1755, 292, 6, 32, "Output",ExpressionUUID->"5ea9f977-4dd1-4e5e-8508-4ca7dad46fda"]
}, Open  ]]
}, Open  ]]
}
]
*)

