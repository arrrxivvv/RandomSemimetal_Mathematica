(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    192961,       4100]
NotebookOptionsPosition[    183764,       3947]
NotebookOutlinePosition[    184204,       3964]
CellTagsIndexPosition[    184161,       3961]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Functions", "Section",
 CellChangeTimes->{{3.824510222643527*^9, 
  3.824510223670834*^9}},ExpressionUUID->"17dbb4a9-2205-4ae3-b65e-\
1ac14b8e021f"],

Cell[CellGroupData[{

Cell["File read functions", "Subsection",
 CellChangeTimes->{{3.8775405042269964`*^9, 
  3.8775405063988123`*^9}},ExpressionUUID->"eae6b6e0-d891-4fac-ad15-\
2eac6f36386b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Py", "[", "ex_", "]"}], ":=", 
  RowBox[{"ExportString", "[", 
   RowBox[{"ex", ",", "\"\<PythonExpression\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8245102246290245`*^9, 3.8245102246574535`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"53dc3f67-2ce9-4343-95c4-12164358077b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ArrToStrPyOld", "[", "arr_", "]"}], ":=", 
   RowBox[{"\"\<[\>\"", "<>", 
    RowBox[{"StringTrim", "@", 
     RowBox[{"StringJoin", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\"\<, \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"#", ",", "InputForm"}], "]"}]}], "&"}], "/@", "arr"}], 
      "]"}]}], "<>", "\"\<]\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8245087393914633`*^9, 3.8245087669500685`*^9}, 
   3.82451075992731*^9, {3.8245113471293006`*^9, 3.8245113474559517`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"f6f60b82-47bc-4ecd-9090-14240a1fd3aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ArrToStrPy", "[", "arr_", "]"}], ":=", 
   RowBox[{"\"\<[\>\"", "<>", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{
         "arr", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], "]"}],
         "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", "<", 
           RowBox[{"Length", "[", "arr", "]"}]}], ",", "\"\<, \>\"", ",", 
          "\"\<\>\""}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "arr", "]"}]}], "}"}]}], "]"}], "]"}], "<>", 
    "\"\<]\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8245109780782375`*^9, 3.8245109890927916`*^9}, {
  3.824511030036851*^9, 3.8245110624769955`*^9}, {3.8245111620682597`*^9, 
  3.824511345418638*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"434ba847-9258-49cd-aa8c-195907357adc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"readPython", "[", "filename_", "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"ExternalEvaluate", "[", 
     RowBox[{"sessPy", ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<np.load(\>\"", "<>", 
       RowBox[{"Py", "[", 
        RowBox[{
         RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\\\\\>\"", "<>", 
         "filename"}], "]"}], "<>", "\"\<)\>\""}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8379560632335663`*^9, 3.837956094088735*^9}, 
   3.8613693748002543`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"384abfbc-3060-4eca-b1af-f42e04ab007a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"readJulia", "[", "fName_", "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"ExternalEvaluate", "[", 
     RowBox[{"sessJul", ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<load(\>\"", "<>", 
       RowBox[{"Py", "[", 
        RowBox[{
         RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\\\\\>\"", "<>", 
         "fName"}], "]"}], "<>", "\"\<)\>\""}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.863463958971037*^9, 3.863464042733676*^9}, {
  3.863464279043124*^9, 3.863464279357072*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"af677797-8695-4a50-b829-ef362edccaa5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reverseDims", "[", "arr_", "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"arr", ",", 
     RowBox[{"Reverse", "[", 
      RowBox[{"Table", "[", 
       RowBox[{"d", ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "1", ",", 
          RowBox[{"ArrayDepth", "[", "arr", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866816459585126*^9, 3.866816490134407*^9}, {
  3.866816521550611*^9, 3.8668165253755474`*^9}, {3.8668248407363772`*^9, 
  3.866824840911762*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"3a5b11c8-d0d6-4e1d-8e75-f81db6d5205c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"readJuliaVar", "[", 
    RowBox[{"fName_", ",", "var_"}], "]"}], ":=", 
   RowBox[{"ExternalEvaluate", "[", 
    RowBox[{"sessJul", ",", 
     RowBox[{"\"\<load(\>\"", "<>", 
      RowBox[{"Py", "[", 
       RowBox[{
        RowBox[{"Directory", "[", "]"}], "<>", "\"\<\\\\\>\"", "<>", 
        "fName"}], "]"}], "<>", "\"\<,\\\"\>\"", "<>", "var", "<>", 
      "\"\<\\\")\>\""}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.863463846883259*^9, 3.863463873355799*^9}, {
  3.8634639088787956`*^9, 3.863463920443989*^9}, {3.8634639533430243`*^9, 
  3.863463953755516*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"7ab87c4b-e3e5-4bed-b56f-9b8b774a3d0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fileExstJulia", "[", "fName_", "]"}], ":=", 
   RowBox[{"ExternalEvaluate", "[", 
    RowBox[{"sessJul", ",", 
     RowBox[{"\"\<isfile(\\\"\>\"", "<>", "fName", "<>", "\"\<\\\")\>\""}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8734124144644403`*^9, 3.8734124447269144`*^9}, {
  3.8734126218138633`*^9, 3.873412639365721*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"49ecd47d-4719-4620-9c88-d34fe8354dda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrToStrPy2", "[", "paramDiv", "]"}]], "Input",
 CellChangeTimes->{{3.8245113134225593`*^9, 3.8245113201392865`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"89d65ea3-6c91-45f3-86ce-7aa385b9142e"],

Cell[BoxData[
 RowBox[{"ArrToStrPy2", "[", "paramDiv", "]"}]], "Output",
 CellChangeTimes->{{3.824511320678381*^9, 3.82451134186456*^9}, 
   3.824671056771495*^9, 3.8351245211488805`*^9, 3.837862294663557*^9, {
   3.8383106519118023`*^9, 3.8383106605837984`*^9}, 3.838310704752384*^9, 
   3.8383109708051963`*^9, 3.8421247063799973`*^9, 3.844539253724265*^9, 
   3.8447976203307605`*^9, 3.84496322970388*^9, 3.845324323165859*^9, 
   3.847826152808264*^9, 3.848561604807829*^9, 3.849307002238453*^9, 
   3.8494934538699713`*^9, 3.849579076746434*^9, 3.8495983740108376`*^9, 
   3.8495986061277*^9, 3.8496441418192096`*^9, 3.849669461876625*^9, 
   3.851375220294218*^9, 3.8514608230932913`*^9, 3.8527366107229376`*^9, 
   3.8529217049871097`*^9, 3.858092926097463*^9, 3.8595585918043056`*^9, 
   3.8601711942403994`*^9, 3.860503669507362*^9, 3.8605037178669767`*^9, 
   3.860689050459262*^9, 3.861792818244237*^9, 3.8620652397658005`*^9, 
   3.8622563001178865`*^9, 3.8630158024803963`*^9, 3.863197595309044*^9, 
   3.863488545726181*^9, 3.863528651865114*^9, 3.864213573692992*^9, 
   3.865715607945422*^9, 3.866038990785407*^9, {3.8662437607538404`*^9, 
   3.8662437691184645`*^9}, 3.8662440108797827`*^9, 3.8666475798661757`*^9, 
   3.86665390833171*^9, 3.866654523149728*^9, 3.8668234376403637`*^9, 
   3.867491996555052*^9, 3.867499796121808*^9, 3.8678890649510317`*^9, 
   3.868096055353133*^9, 3.868629423546687*^9, 3.8691356931353416`*^9, 
   3.8691368863519287`*^9, 3.8713235555927105`*^9, 3.873238617154175*^9, 
   3.873238803809783*^9, 3.8733300403629313`*^9, 3.8733408343408337`*^9, 
   3.873720466187853*^9, 3.875760870888653*^9, 3.8775351242076235`*^9, 
   3.878676914360999*^9, 3.87955829908658*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"a4976105-9a9d-45a1-bff4-dbf684d01dd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ToString", "[", "#", "]"}], "&"}], "/@", "paramDiv"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.824510817567704*^9, 3.8245108612846217`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"75ced92a-2e08-4f98-8656-73fc8cc3b092"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"StringJoin\\\", \\\"[\\\", \\\"paramDiv\\\", \\\"]\\\"}]\
\\).\"", 2, 38, 4, 27672995363684509811, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8478261528902674`*^9, 3.848561604849831*^9, 3.849307002295438*^9, 
   3.849493453990964*^9, 3.849579076793436*^9, 3.8495983740539045`*^9, 
   3.849598606222703*^9, 3.849644141890306*^9, 3.849669461965618*^9, 
   3.8513752203282614`*^9, 3.851460823137291*^9, 3.852736610834491*^9, 
   3.8529217050491076`*^9, 3.8580929261423445`*^9, 3.859558591857164*^9, 
   3.8601711943145404`*^9, 3.860503669575199*^9, 3.8605037179298086`*^9, 
   3.860689050800741*^9, 3.861792818405502*^9, 3.8620652398955097`*^9, 
   3.862256300255491*^9, 3.863015802561181*^9, 3.8631975953838596`*^9, 
   3.8634885460378523`*^9, 3.8635286519503117`*^9, 3.8642135739523706`*^9, 
   3.8657156083872423`*^9, 3.8660389909589443`*^9, {3.866243760831633*^9, 
   3.8662437691753163`*^9}, 3.86624401108943*^9, 3.86664757992909*^9, 
   3.866653908442416*^9, 3.866654523254489*^9, 3.8668234377989416`*^9, 
   3.867491996580185*^9, 3.8674997961695647`*^9, 3.867889065034074*^9, 
   3.8680960553897934`*^9, 3.868629423594559*^9, 3.869135693212135*^9, 
   3.8691368864018*^9, 3.871323555763771*^9, 3.873238617258896*^9, 
   3.873238803871623*^9, 3.8733300404905887`*^9, 3.8733408344415646`*^9, 
   3.8737204662716627`*^9, 3.875760870970457*^9, 3.8775351242646236`*^9, 
   3.8786769144645147`*^9, 3.87955829919928*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"c2e39243-262e-4e8c-a066-0166ddc9fe9a"],

Cell[BoxData[
 RowBox[{"StringJoin", "[", "paramDiv", "]"}]], "Output",
 CellChangeTimes->{{3.824510830750594*^9, 3.8245108619857435`*^9}, 
   3.8246710568373184`*^9, 3.835124521280528*^9, 3.837862294778558*^9, {
   3.838310651987835*^9, 3.838310660656801*^9}, 3.838310704830361*^9, 
   3.838310970961218*^9, 3.842124706468953*^9, 3.844539253832266*^9, 
   3.844797620499759*^9, 3.8449632298132315`*^9, 3.8453243232472725`*^9, 
   3.847826152924307*^9, 3.848561604857826*^9, 3.8493070023101573`*^9, 
   3.8494934540109577`*^9, 3.849579076804438*^9, 3.849598374062877*^9, 
   3.8495986062497*^9, 3.849644141917206*^9, 3.849669461980666*^9, 
   3.8513752203362865`*^9, 3.8514608231453123`*^9, 3.8527366108564854`*^9, 
   3.852921705073107*^9, 3.8580929261533146`*^9, 3.8595585918741155`*^9, 
   3.8601711943265047`*^9, 3.860503669593133*^9, 3.8605037179572487`*^9, 
   3.860689050817152*^9, 3.8617928184847307`*^9, 3.8620652399511805`*^9, 
   3.8622563003657875`*^9, 3.863015802603066*^9, 3.863197595406813*^9, 
   3.8634885462024097`*^9, 3.863528651988485*^9, 3.864213574025198*^9, 
   3.8657156084680233`*^9, 3.8660389910636635`*^9, {3.8662437608426027`*^9, 
   3.8662437691852856`*^9}, 3.8662440113683777`*^9, 3.866647579946762*^9, 
   3.866653908496372*^9, 3.8666545232864037`*^9, 3.866823437892689*^9, 
   3.86749199659115*^9, 3.8674997961857204`*^9, 3.867889065065564*^9, 
   3.8680960553973017`*^9, 3.8686294236065273`*^9, 3.8691356932260976`*^9, 
   3.869136886431717*^9, 3.8713235559343114`*^9, 3.873238617285823*^9, 
   3.8732388038975573`*^9, 3.8733300405743628`*^9, 3.873340834473603*^9, 
   3.873720466493539*^9, 3.875760871178416*^9, 3.8775351242775545`*^9, 
   3.8786769145074067`*^9, 3.8795582992381763`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"1b06dc66-d079-43d1-854b-6aedb1333fe0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"valLstToStr", "[", "divLst", "]"}]], "Input",
 CellChangeTimes->{{3.8634644090098405`*^9, 3.8634644263785033`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"080ec37f-d44c-42da-b2d5-56d555aad453"],

Cell[BoxData[
 RowBox[{"valLstToStr", "[", "divLst", "]"}]], "Output",
 CellChangeTimes->{{3.8634644151412*^9, 3.863464426774472*^9}, 
   3.8634885469018517`*^9, 3.86352865206271*^9, 3.8642135740862484`*^9, 
   3.8657156086325836`*^9, 3.8660389911145644`*^9, {3.8662437609104214`*^9, 
   3.8662437692282104`*^9}, 3.866244011452727*^9, 3.866647579994917*^9, 
   3.866653908551465*^9, 3.8666545233926783`*^9, 3.866823437949538*^9, 
   3.8674919966140885`*^9, 3.8674997962187033`*^9, 3.8678890651403627`*^9, 
   3.868096055427765*^9, 3.8686294236434293`*^9, 3.869135693282945*^9, 
   3.869136886484579*^9, 3.871323555968221*^9, 3.8732386173239155`*^9, 
   3.8732388039378448`*^9, 3.873330040610268*^9, 3.8733408345115013`*^9, 
   3.873720466529444*^9, 3.8757608712162037`*^9, 3.877535124296346*^9, 
   3.8786769146007175`*^9, 3.8795582992900376`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"7de42d1f-7e53-4db0-b65c-74caa40a626d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"valLstToStr", "[", "val_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ArrayQ", "[", "val", "]"}], ",", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "[", "val", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<[\>\""}], ",", 
         RowBox[{"\"\<}\>\"", "\[Rule]", "\"\<]\>\""}]}], "}"}]}], "]"}], ",", 
     RowBox[{"ToString", "[", "val", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.863462624243744*^9, 3.8634626849583273`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"d921310e-6a17-4731-92a1-bb5aa8c8c64f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "fAttrValFunc", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<alpha\>\"", "\[Rule]", "0"}], ",", 
     RowBox[{"\"\<attrMoreLst\>\"", "->", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"\"\<valMoreLst\>\"", "->", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fAttrValFunc", "[", 
   RowBox[{
   "mSz_", ",", "divLst_", ",", "itNum_", ",", "seed_", ",", "dim_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "attrLstTmp", ",", "valLstTmp", ",", "attrLstDimTmp", ",", 
      "valLstDimTmp", ",", "alpha"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"attrLstTmp", "=", "attrLstBase"}], ";", "\[IndentingNewLine]", 
     RowBox[{"valLstTmp", "=", 
      RowBox[{"{", 
       RowBox[{"mSz", ",", "divLst", ",", "itNum", ",", "seed"}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"alpha", "=", 
      RowBox[{"OptionValue", "[", "\"\<alpha\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"alpha", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"attrLstTmp", "=", 
         RowBox[{"attrLstTmp", "~", "Join", "~", 
          RowBox[{"{", "\"\<alpha\>\"", "}"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"valLstTmp", "=", 
         RowBox[{"valLstTmp", "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"alpha", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "}"}]}]}], ";"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"attrLstDimTmp", "=", 
      RowBox[{
       RowBox[{"{", "\"\<dim\>\"", "}"}], "~", "Join", "~", "attrLstTmp"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"valLstDimTmp", "=", 
      RowBox[{
       RowBox[{"{", "dim", "}"}], "~", "Join", "~", "valLstTmp"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"OptionValue", "[", "\"\<attrMoreLst\>\"", "]"}], "]"}], ">",
         "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"attrLstDimTmp", "=", 
         RowBox[{"attrLstDimTmp", "~", "Join", "~", 
          RowBox[{"OptionValue", "[", "\"\<attrMoreLst\>\"", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"attrLstTmp", "=", 
         RowBox[{"attrLstTmp", "~", "Join", "~", 
          RowBox[{"OptionValue", "[", "\"\<attrMoreLst\>\"", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"valLstDimTmp", "=", 
         RowBox[{"valLstDimTmp", "~", "Join", "~", 
          RowBox[{"OptionValue", "[", "\"\<valMoreLst\>\"", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"valLstTmp", "=", 
         RowBox[{"valLstTmp", "~", "Join", "~", 
          RowBox[{"OptionValue", "[", "\"\<valMoreLst\>\"", "]"}]}]}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "attrLstDimTmp", ",", "valLstDimTmp", ",", "attrLstTmp", ",", 
       "valLstTmp"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.867931738597655*^9, 3.867932092627474*^9}, {
  3.8679323017982893`*^9, 3.867932302157806*^9}, {3.867932348501759*^9, 
  3.8679323487611585`*^9}, {3.86793238971268*^9, 3.8679323922132874`*^9}, {
  3.8679324229559155`*^9, 3.867932424640151*^9}, {3.8679331081084495`*^9, 
  3.8679331128556757`*^9}, {3.8686400437689075`*^9, 3.868640050795416*^9}, {
  3.8775374767754383`*^9, 3.8775374992194014`*^9}, {3.877537530710633*^9, 
  3.877537532643978*^9}, {3.877537651404257*^9, 3.8775376920066805`*^9}, {
  3.8775377356735067`*^9, 3.8775377784441137`*^9}, {3.8775378102333994`*^9, 
  3.877537876294737*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"bfd8653e-e62c-4354-a8bf-673cdbbae475"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fNameFun", "[", 
    RowBox[{
    "main_", ",", "attrLst_", ",", "valLst_", ",", "mod_", ",", "fExt_", ",", 
     RowBox[{"isNoSpace_", ":", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fTmp", "=", "main"}], ",", "it"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"it", "=", "1"}], ",", 
        RowBox[{"it", "\[LessEqual]", 
         RowBox[{"Length", "[", "attrLst", "]"}]}], ",", 
        RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"fTmp", "=", 
         RowBox[{"fTmp", "<>", "\"\<_\>\"", "<>", 
          RowBox[{"attrLst", "[", 
           RowBox[{"[", "it", "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
          RowBox[{"valLstToStr", "[", 
           RowBox[{"valLst", "[", 
            RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"mod", "\[NotEqual]", "\"\<\>\""}], ",", 
        RowBox[{"fTmp", "=", 
         RowBox[{"fTmp", "<>", "\"\<_\>\"", "<>", "mod"}]}]}], "]"}], ";", 
      "\n", "\t", 
      RowBox[{"fTmp", "=", 
       RowBox[{"fTmp", "<>", "\"\<.\>\"", "<>", "fExt"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"isNoSpace", ",", 
        RowBox[{"fTmp", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"StringDelete", "[", 
            RowBox[{"fTmp", ",", 
             RowBox[{"{", 
              RowBox[{"\"\< \>\"", ",", "\"\<[\>\"", ",", "\"\<]\>\""}], 
              "}"}]}], "]"}], ",", 
           RowBox[{"\"\<,\>\"", "\[Rule]", "\"\<_\>\""}]}], "]"}]}]}], "]"}], 
      ";", "\[IndentingNewLine]", "fTmp"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.863462320601772*^9, 3.863462475774273*^9}, {
  3.863462533680303*^9, 3.8634625455996237`*^9}, {3.8634625859709277`*^9, 
  3.8634626115378404`*^9}, {3.8634626927019615`*^9, 3.8634627017701063`*^9}, {
  3.8634627425302267`*^9, 3.8634627655199327`*^9}, {3.863462966754678*^9, 
  3.8634629841169467`*^9}, {3.8634650127685995`*^9, 3.8634650270169115`*^9}, {
  3.863468457842353*^9, 3.8634684818413777`*^9}, {3.86348857791549*^9, 
  3.863488578346753*^9}, {3.866899440086493*^9, 3.8668994840121946`*^9}, {
  3.866899548612152*^9, 3.866899549561369*^9}, {3.8668997187553005`*^9, 
  3.866899732154889*^9}, {3.866899848066498*^9, 3.866899910873183*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"18d198c6-3928-4fae-9736-a357bdcfe224"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "aboveBelowAvg", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<isStd\>\"", "\[Rule]", "False"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"aboveBelowAvg", "[", 
    RowBox[{"lst_", ",", "rat_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nRat", ",", "nAbove", ",", "nBelow", ",", "wAbove", ",", "wBelow"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nRat", "=", 
       RowBox[{
        RowBox[{"rat", " ", 
         RowBox[{"Length", "[", "lst", "]"}]}], "+", "0.5"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nAbove", "=", 
       RowBox[{"Ceiling", "[", "nRat", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nBelow", "=", 
       RowBox[{"Floor", "[", "nRat", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"wAbove", "=", 
       RowBox[{"nRat", "-", "nBelow"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"wBelow", "=", 
       RowBox[{"nAbove", "-", "nRat"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nAbove", "\[Equal]", "nBelow"}], ",", 
        RowBox[{
        "lst", "\[LeftDoubleBracket]", "nRat", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<isStd\>\"", "]"}], ",", 
          SqrtBox[
           RowBox[{
            RowBox[{
             SuperscriptBox["wAbove", "2"], 
             SuperscriptBox[
              RowBox[{
              "lst", "\[LeftDoubleBracket]", "nAbove", 
               "\[RightDoubleBracket]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["wBelow", "2"], 
             SuperscriptBox[
              RowBox[{
              "lst", "\[LeftDoubleBracket]", "nBelow", 
               "\[RightDoubleBracket]"}], "2"]}]}]], ",", 
          RowBox[{
           RowBox[{"wAbove", " ", 
            RowBox[{
            "lst", "\[LeftDoubleBracket]", "nAbove", 
             "\[RightDoubleBracket]"}]}], "+", 
           RowBox[{"wBelow", " ", 
            RowBox[{
            "lst", "\[LeftDoubleBracket]", "nBelow", 
             "\[RightDoubleBracket]"}]}]}]}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.868641626191527*^9, 3.8686416935583653`*^9}, {
  3.8686469801655693`*^9, 3.868647054660738*^9}, {3.868647097396124*^9, 
  3.868647230340474*^9}, {3.868647290683523*^9, 3.8686472910436044`*^9}, {
  3.868654650940668*^9, 3.8686546517483006`*^9}, {3.868654704387564*^9, 
  3.8686547470446377`*^9}, {3.868655560342877*^9, 3.8686557064674025`*^9}, {
  3.8686557571718616`*^9, 3.8686557669908123`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"86af4e76-cd23-495a-baf1-bd9fdf49d730"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"resFun", "[", 
    RowBox[{"mSz_", ",", 
     RowBox[{"mSzMin_", ":", "10"}], ",", 
     RowBox[{"mSzMax_", ":", "50"}], ",", 
     RowBox[{"resMin_", ":", "16"}], ",", 
     RowBox[{"resMax_", ":", "32"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dRes", ",", "dMsz"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dRes", "=", 
       RowBox[{"resMax", "-", "resMin"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dMsz", "=", 
       RowBox[{"mSzMax", "-", "mSzMin"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"(", 
           RowBox[{"mSz", "-", "mSzMin"}], ")"}], "dMsz"], "dRes"}], "+", 
        "resMin"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868639489700554*^9, 3.8686396237206182`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"71b7b3cf-0225-4404-bc6d-6e2ccbd147c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Array manipulation functions", "Subsection",
 CellChangeTimes->{{3.8775405248823247`*^9, 
  3.8775405297283707`*^9}},ExpressionUUID->"965319da-5eeb-4358-b2cf-\
bf9cc8ad291c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"shAvgWrap", "[", "arr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ln", "=", 
        RowBox[{
         RowBox[{"Dimensions", "[", "arr", "]"}], "\[LeftDoubleBracket]", "1",
          "\[RightDoubleBracket]"}]}], ",", "arr1d", ",", "it"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"arr1d", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "ln"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"it", "=", "1"}], ",", 
        RowBox[{"it", "\[LessEqual]", "ln"}], ",", 
        RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"arr1d", "+=", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{
            "arr", "\[LeftDoubleBracket]", "it", "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"it", "-", "1"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "arr1d"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.824526024412413*^9, 3.824526051932708*^9}, {
  3.824526411606574*^9, 3.8245264307065945`*^9}, {3.824526469074217*^9, 
  3.8245265023031545`*^9}, {3.824526783106619*^9, 3.8245269060170536`*^9}, {
  3.8245270074710817`*^9, 3.8245270344836607`*^9}, {3.8635327336929016`*^9, 
  3.8635327341374507`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"2b022311-aa99-44bd-8f39-dbce27c19356"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Wrap0", "[", "arr_", "]"}], ":=", 
   RowBox[{"arr", "~", "Join", "~", 
    RowBox[{"{", 
     RowBox[{"arr", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.839674021236119*^9, 3.839674028028344*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"cc007882-350c-4897-a127-87b3695d4b3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rmSingletonDims", "[", "arr_", "]"}], ":=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{"arr", ",", 
     RowBox[{
      RowBox[{"Dimensions", "[", "arr", "]"}], "~", "DeleteCases", "~", 
      "1"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.877540588796104*^9, 3.87754060560149*^9}, {
  3.8775406423040867`*^9, 3.8775406796012273`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"cc96c2c5-2116-4505-9907-ba5064e1706d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data functions", "Subsection",
 CellChangeTimes->{{3.867934276622921*^9, 
  3.867934278236311*^9}},ExpressionUUID->"a7ea7af9-e44d-47e2-9643-\
b0dc728ea490"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeDataErr", "[", 
    RowBox[{"dataLst_", ",", "varLst_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ln", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ln", "=", 
       RowBox[{"Length", "[", "dataLst", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Around", "[", 
         RowBox[{
          RowBox[{
          "dataLst", "\[LeftDoubleBracket]", "it", "\[RightDoubleBracket]"}], 
          ",", 
          RowBox[{
          "varLst", "\[LeftDoubleBracket]", "it", "\[RightDoubleBracket]"}]}],
          "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"it", ",", "1", ",", "ln"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"43c74271-d349-470a-b0e6-71112cc0dd9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeInset", "[", "plot_Legended", "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"plot", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"plot", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"plot", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "]"}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8657841349940224`*^9, 3.865784135035907*^9}, {
  3.86578428275751*^9, 3.8657842840493965`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"9eb360e6-524e-4737-818a-4efff29d5b9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"histLstToDat", "[", "histLst_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"histLst", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "ii"}], "\[RightDoubleBracket]"}], "+", 
         RowBox[{"histLst", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", 
           RowBox[{"ii", "+", "1"}]}], "\[RightDoubleBracket]"}]}], "2"], ",", 
       RowBox[{"histLst", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "ii"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{
        "histLst", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.867934280794447*^9, 3.8679343105261497`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"8a6ac6b6-7dde-41df-aba6-7fefaf53adfb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Environment setup", "Section",
 CellChangeTimes->{{3.824512285365329*^9, 
  3.824512287302496*^9}},ExpressionUUID->"e34f42be-c76c-4099-b140-\
baaa24e3023a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<\\\\..\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8245122907896557`*^9, 3.8245122936365337`*^9}, {
   3.8775399645610075`*^9, 3.877539980753476*^9}, 3.8795581078376427`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"008d6b79-a114-4f3a-aeed-33b8ddc7f684"],

Cell[BoxData["\<\"D:\\\\Ohdraw.niL\\\\Google_drive\\\\Programming\\\\Julia\\\\\
Modules\"\>"], "Output",
 CellChangeTimes->{
  3.8245122941691027`*^9, 3.824671089275849*^9, 3.835124531019515*^9, 
   3.8378610626067505`*^9, 3.8383106970403605`*^9, 3.8383109744587526`*^9, 
   3.844539257691388*^9, 3.844797625132769*^9, 3.8449632334300766`*^9, 
   3.84532432703133*^9, 3.847826157948262*^9, 3.848561612410904*^9, 
   3.8493070063902903`*^9, {3.849493777978397*^9, 3.8494937968096457`*^9}, 
   3.849579082295595*^9, 3.849598381493102*^9, 3.849598614136083*^9, 
   3.8496441556673512`*^9, 3.8496694678391356`*^9, 3.8506882322197924`*^9, 
   3.8513752243164606`*^9, 3.8514608297474036`*^9, 3.8527368134516068`*^9, 
   3.852921714354332*^9, 3.858092952849635*^9, 3.8595585986202183`*^9, 
   3.8601712031428914`*^9, 3.8605036809836397`*^9, 3.860689053935812*^9, 
   3.8617928215225744`*^9, 3.8620652439971914`*^9, 3.8622563073238635`*^9, 
   3.863015802747681*^9, 3.8631976060327044`*^9, 3.8634892284886465`*^9, 
   3.8635286748540974`*^9, 3.8642135800463095`*^9, 3.8657156156980963`*^9, 
   3.8660390120862517`*^9, 3.866244021413384*^9, 3.8666475900681925`*^9, 
   3.8666539088169327`*^9, 3.8666545297488956`*^9, 3.8668234490648723`*^9, 
   3.8674920220999603`*^9, 3.867499828525797*^9, 3.867889088719204*^9, 
   3.8680960685394516`*^9, 3.868629432403266*^9, 3.8691357015209413`*^9, 
   3.869135860021258*^9, 3.8713235731873913`*^9, 3.8732386342706614`*^9, 
   3.8733406861772003`*^9, 3.873340837950577*^9, 3.873720022252307*^9, 
   3.8737203231954756`*^9, 3.875760850618696*^9, 3.877535128626705*^9, {
   3.8775399730882425`*^9, 3.877539985795746*^9}, 3.8786763126085863`*^9, {
   3.8795580775516176`*^9, 3.8795581087454467`*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"1681ff48-a89a-4a63-ad2b-32c801b07afc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"texStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "8"}], ",", 
     RowBox[{"FontWeight", "\[Rule]", " ", "\"\<Plain\>\""}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8245170299759636`*^9, 3.8245170300108676`*^9}, {
   3.824517914731312*^9, 3.8245179151089077`*^9}, {3.824518701597248*^9, 
   3.82451870297586*^9}, {3.824518896664835*^9, 3.824518910914926*^9}, 
   3.8245189419570017`*^9, {3.849588570579691*^9, 3.8495885713151474`*^9}, 
   3.849589279668713*^9, {3.86069656329928*^9, 3.8606965729141045`*^9}, {
   3.8632105037278585`*^9, 3.863210504087669*^9}, {3.8634667480611725`*^9, 
   3.863466748535248*^9}, {3.8634667941528997`*^9, 3.8634667950290403`*^9}, {
   3.863470814348394*^9, 3.863470815132123*^9}, {3.863487458918458*^9, 
   3.863487459886877*^9}, {3.8634875373934507`*^9, 3.8634875378507423`*^9}, {
   3.8634876587878046`*^9, 3.8634876593406096`*^9}, {3.863528662242475*^9, 
   3.8635286626285205`*^9}, {3.8635362300900507`*^9, 3.863536231090395*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"51631f1d-373e-4306-ac4c-da9622763a88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"FontFamily", ",", "FontSize", ",", "FontWeight"}], "}"}], "/.", 
  "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
    RowBox[{"FontSize", "\[Rule]", "8"}], ",", 
    RowBox[{"FontWeight", "\[Rule]", "\"\<Plain\>\""}]}], "}"}]}]], "Input",
 NumberMarks->False,
 CellLabel->"In[3]:=",ExpressionUUID->"1a47d839-8d04-42ba-be50-f66e7b30f54e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Times New Roman\"\>", ",", "8", ",", "\<\"Plain\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.863488605818841*^9, 3.8635286750025125`*^9, 
  3.863535853164317*^9, 3.864213580240246*^9, 3.8657156160849485`*^9, 
  3.866039012254919*^9, 3.86624402159842*^9, 3.8666475902635*^9, 
  3.8666539089055543`*^9, 3.8666545299607058`*^9, 3.8668234492443905`*^9, 
  3.867492022301217*^9, 3.8674998286457872`*^9, 3.867889088902526*^9, 
  3.868096068657501*^9, 3.8686294325587573`*^9, 3.8691357016736712`*^9, 
  3.8691358603129063`*^9, 3.8713235734059143`*^9, 3.8732386344222565`*^9, 
  3.873340686317868*^9, 3.8733408380688953`*^9, 3.8737200230273647`*^9, 
  3.8737203236670003`*^9, 3.8757608508972907`*^9, 3.8775351286966906`*^9, 
  3.878676312725879*^9, 3.8795580779998336`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"66c311b0-b30b-4bbf-9c87-1e950227c014"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"attrLstBase", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<N\>\"", ",", "\"\<param_divide\>\"", ",", "\"\<instanceNum\>\"", 
     ",", "\"\<seed\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"attrLstBaseDim", "=", 
   RowBox[{
    RowBox[{"{", "\"\<dim\>\"", "}"}], "~", "Join", "~", "attrLstBase"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"attrLstDimLev", "=", 
   RowBox[{
    RowBox[{"{", "\"\<dim\>\"", "}"}], "~", "Join", "~", "attrLstBase", "~", 
    "Join", "~", 
    RowBox[{"{", "\"\<lev\>\"", "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.866850219018916*^9, 3.866850244716178*^9}, {
  3.8668504067474394`*^9, 3.8668504461169653`*^9}, {3.8668954473683043`*^9, 
  3.86689545907224*^9}, {3.8678905274297023`*^9, 3.8678905321005135`*^9}, {
  3.871324010577579*^9, 3.8713240162298927`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"63e8211c-668a-4792-bbaf-e7b022a84e71"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"titleMag", "=", "1.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labMag", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labMagSmall", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tickMag", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataThick", "=", 
   RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legMkSz", "=", "22"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fenceW", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"darkRed", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.8", ",", "0", ",", "0"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8495981641415653`*^9, 3.849598174069401*^9}, {
  3.8496441476052437`*^9, 3.849644151135173*^9}, {3.851399665671551*^9, 
  3.851399670791641*^9}, {3.8514014907078648`*^9, 3.8514014943568106`*^9}, {
  3.8514994675216045`*^9, 3.851499472905104*^9}, {3.8515054817710176`*^9, 
  3.8515054841807456`*^9}, {3.851834733113659*^9, 3.8518347357252846`*^9}, {
  3.851836349058404*^9, 3.8518363493894033`*^9}, {3.865739286550493*^9, 
  3.8657392867559443`*^9}, {3.8657393615063457`*^9, 3.865739362115363*^9}, {
  3.8657402601486564`*^9, 3.865740260865778*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"58c0709b-769a-475d-91bd-fc09a0310565"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colorLst", "=", 
   RowBox[{
    RowBox[{"{", "Black", "}"}], "~", "Join", "~", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ColorData", "[", 
       RowBox[{"112", ",", "ii"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "1", ",", "100"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.866040683020031*^9, 3.86604070993818*^9}, {
  3.866040751080608*^9, 3.8660407518290777`*^9}, {3.8662942254340568`*^9, 
  3.8662942290489764`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7714404d-17f0-42ef-b3cc-6f1d82641ace"],

Cell[BoxData[
 RowBox[{"<<", "MaTeX`"}]], "Input",
 CellChangeTimes->{{3.8246711045639367`*^9, 3.8246711082071953`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"167e8407-505f-4875-94f1-a95313d4dd9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"MaTeX", ",", 
   RowBox[{"\"\<Preamble\>\"", "\[Rule]", 
    RowBox[{"{", "\"\<\\\\usepackage{color,txfonts}\>\"", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8518363534374256`*^9, 3.8518363534664707`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"b2874e24-0800-42d8-a9d8-3d209bae2d17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BasePreamble\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"\\\\usepackage{lmodern,exscale}\"\>", 
      ",", "\<\"\\\\usepackage{amsmath,amssymb}\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"Preamble\"\>", "\[Rule]", 
    RowBox[{"{", "\<\"\\\\usepackage{color,txfonts}\"\>", "}"}]}], ",", 
   RowBox[{"\<\"DisplayStyle\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"ContentPadding", "\[Rule]", "True"}], ",", 
   RowBox[{"LineSpacing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.2`", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
   RowBox[{"Magnification", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"LogFileFunction\"\>", "\[Rule]", "None"}], ",", 
   RowBox[{"\<\"TeXFileFunction\"\>", "\[Rule]", "None"}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBuI0j+CK05veOE42P6/avOWNo87kmry7QFokx7141743
jmbtkpJtB984bonotdh46I2jFZfixODDbxx90j4KrwPSnCt12U8efeM4RWkD
t9+xN45fReeFrQbS7vYr9OVOvHEM4xD5Wgakz4V7ONUC6ZhSnT6Wk28cjS9x
vALRHpuSeVmBtMDM/F4xIM31q3eOBJD+8JqTK/3UG8cvDoolLmffOFZpPi5z
O/fG0br8QQv3+TeOV6rOzOID0hUSeS9AdNUx++REIJ1r/+na8gtvHFcdX7xs
NZAWKPHfkXnxjaN0wJoT54B0oLeW+eVLbxzNlz3OOnX5jWNU9vY6EM2R/WHb
t+tvHE/N3nN27m2gefv/LTwPpCPOXt0CojO6WW533AG622gzQyeQPhBTHZX7
4I0jd73V5vOP3zjOy7J+/efpG0eFErGK1c/fOAIAHDW52A==
  "],
 CellLabel->"Out[17]=",ExpressionUUID->"b5f45526-75b3-4935-a506-f65e1aeda6d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"MaTeX", ",", 
   RowBox[{"\"\<FontSize\>\"", "\[Rule]", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8606909709848056`*^9, 3.860690988838002*^9}, {
  3.8606913748551016`*^9, 3.8606913750452833`*^9}, {3.8606965565950284`*^9, 
  3.860696556897904*^9}, {3.863488153002334*^9, 3.86348815436016*^9}, {
  3.8634883043762074`*^9, 3.8634883047440805`*^9}, {3.863528667109283*^9, 
  3.8635286675381746`*^9}, {3.8635362395018167`*^9, 3.8635362396813483`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"042688be-73a4-4df2-9689-7a863c99e11e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BasePreamble\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"\\\\usepackage{lmodern,exscale}\"\>", 
      ",", "\<\"\\\\usepackage{amsmath,amssymb}\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"Preamble\"\>", "\[Rule]", 
    RowBox[{"{", "\<\"\\\\usepackage{color,txfonts}\"\>", "}"}]}], ",", 
   RowBox[{"\<\"DisplayStyle\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"ContentPadding", "\[Rule]", "True"}], ",", 
   RowBox[{"LineSpacing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.2`", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
   RowBox[{"Magnification", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"LogFileFunction\"\>", "\[Rule]", "None"}], ",", 
   RowBox[{"\<\"TeXFileFunction\"\>", "\[Rule]", "None"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8606910022843504`*^9, 3.860691375517753*^9, 3.860696557479397*^9, 
   3.86179282553636*^9, 3.862065245571043*^9, 3.862256308997164*^9, 
   3.863015805331526*^9, 3.8631976087360477`*^9, 3.863210519819722*^9, {
   3.863470841050869*^9, 3.8634708645576143`*^9}, 3.863487122543998*^9, 
   3.8634875553265047`*^9, 3.8634881549998674`*^9, {3.863488305298376*^9, 
   3.863488330938929*^9}, 3.8634886209707947`*^9, 3.863528676517558*^9, 
   3.8635362402035637`*^9, 3.8642135843838544`*^9, 3.865715617139847*^9, 
   3.866244023158682*^9, 3.8666475910777526`*^9, 3.8666539104537053`*^9, 
   3.8666545315379267`*^9, 3.8674920236316442`*^9, 3.8674998291549535`*^9, 
   3.8678890905538216`*^9, 3.8680960694179344`*^9, 3.8686294333685665`*^9, 
   3.8691357031733274`*^9, 3.869135861778388*^9, 3.871323575579401*^9, 
   3.873238637954856*^9, 3.873340688028982*^9, 3.8733408387224245`*^9, 
   3.873720024207842*^9, 3.8737203256487474`*^9, 3.8757608518800592`*^9, 
   3.8775351298388753`*^9, 3.878676313938512*^9, 3.879558080757662*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"38007c3e-725e-4910-9ac1-bc5c283a305b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"$FrontEndSession", ",", 
   RowBox[{"PrintingStyleEnvironment", "\[Rule]", "\"\<Working\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.860695064137703*^9, 3.860695064171611*^9}, 
   3.8634874821397448`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"9a910975-402b-479b-8722-092477c08978"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"SetOptions", "[", 
   RowBox[{"$FrontEndSession", ",", 
    RowBox[{"PrintingStyleEnvironment", "\[Rule]", "\"\<Printout\>\""}]}], 
   "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.863487485466481*^9, 3.863487486313738*^9}, {
  3.863488596103302*^9, 3.8634885975907974`*^9}, {3.863488735543332*^9, 
  3.863488736471043*^9}, {3.863489060477813*^9, 3.8634890620229216`*^9}, {
  3.8634892755103636`*^9, 3.8634892768210335`*^9}, {3.863524448339921*^9, 
  3.863524449582116*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"bf33b9f8-c486-44bc-a945-984e60cbbba0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Python start session", "Section",
 CellChangeTimes->{{3.8245119132853203`*^9, 
  3.8245119159239807`*^9}},ExpressionUUID->"31ea896f-e0e7-4d42-92e6-\
eea6d780b751"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sessPy", "=", 
   RowBox[{"StartExternalSession", "[", "\"\<Python\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.824511916644121*^9, 3.824511920836331*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"35589180-b598-4001-bc20-e067313333dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"sessPy", ",", " ", "\"\<sys.path.insert(1, '')\>\""}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8245119378386545`*^9, 3.8245119431608667`*^9}, 
   3.824512188327597*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"3955dd41-c553-4655-8b0a-ce1ff7c72d35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"sessPy", ",", "\"\<import numpy as np\>\""}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8245121928834333`*^9, 3.824512196372471*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"202ca8a4-a0f5-4997-b5ac-bbc80677351c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Julia start session", "Section",
 CellChangeTimes->{{3.8613689653566823`*^9, 
  3.861368967642495*^9}},ExpressionUUID->"1132cae1-448c-4f34-84d3-\
7a39324c80ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sessJul", "=", 
   RowBox[{"StartExternalSession", "[", "\"\<Julia\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"sessJul", ",", "\"\<using JLD, JLD2\>\""}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8613689687645144`*^9, 3.861368997493122*^9}, {
  3.8665721522623053`*^9, 3.866572159461725*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"8188c136-72b0-49ac-9de0-e265336fb249"]
}, Open  ]],

Cell[CellGroupData[{

Cell["File name functions", "Section",
 CellChangeTimes->{{3.844821394813873*^9, 
  3.8448213979534855`*^9}},ExpressionUUID->"0075eb51-89fc-405f-8715-\
0beb51b55792"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nameAppend", "[", 
    RowBox[{"arr_", ",", "app_"}], "]"}], ":=", 
   RowBox[{"arr", "<>", "\"\<_\>\"", "<>", "app"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8245091755187964`*^9, 3.8245091894282403`*^9}, {
  3.8245104160844364`*^9, 3.8245104396526985`*^9}, {3.8245105182040987`*^9, 
  3.8245105191570625`*^9}, {3.8245106027342815`*^9, 3.824510610597381*^9}, {
  3.824510674057437*^9, 3.8245106755083513`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"cc838347-a540-4cc6-b15c-2c02196b655a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npyType", "=", "\"\<.npy\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"jpgType", "=", "\"\<.jpg\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.8245081070694914`*^9, 3.824508111816057*^9}, {
  3.8635291776650915`*^9, 3.86352918006793*^9}, {3.86355640430825*^9, 
  3.8635564047553473`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"cea2f6d5-e576-40d1-b118-0d51607e3efb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"jldType", "=", "\"\<jld\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jld2Type", "=", "\"\<jld2\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npyType", "=", "\"\<npy\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsType", "=", "\"\<eps\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jpgType", "=", "\"\<jpg\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdfType", "=", "\"\<pdf\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.864269066423362*^9, 3.86426907175295*^9}, {
  3.8668515873986373`*^9, 3.8668515915285997`*^9}, {3.8677669846458263`*^9, 
  3.8677669891948833`*^9}, {3.8677681367302027`*^9, 3.8677681388364663`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"504a753d-e24c-40ca-8066-351c918c5c34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cm", "=", 
   RowBox[{"72", "/", "2.54"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8495885272197824`*^9, 3.849588530715481*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"25c0cc05-a550-4b72-a0b7-2d2aae4daf29"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting functions", "Section",
 CellChangeTimes->{{3.8518973790238113`*^9, 
  3.851897381137249*^9}},ExpressionUUID->"cfa3a635-c940-49ff-b88b-\
c177e0afe115"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getMaxPadding", "[", "p_List", "]"}], ":=", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"Max", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"BorderDimensions", "@", 
           RowBox[{"Image", "[", 
            RowBox[{"Show", "[", 
             RowBox[{"#", ",", 
              RowBox[{"LabelStyle", "\[Rule]", "White"}], ",", 
              RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "]"}]}], 
          "&"}], "/@", "p"}], ")"}], "~", "Flatten", "~", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "+", "1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.851897381842986*^9, 3.851897384226859*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"9c3b6c32-7690-43be-85ba-9d75a0928538"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Subcaption", "Section",
 CellChangeTimes->{{3.849588522706287*^9, 3.849588524679265*^9}, {
  3.8517915469493723`*^9, 
  3.8517915487047653`*^9}},ExpressionUUID->"b5e16e8e-42d8-4475-947a-\
430adea71b48"],

Cell[BoxData[
 RowBox[{
  RowBox[{"capTex", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MaTeX", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Magnification", "\[Rule]", "titleMag"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\\\\mathrm{(a)}\>\"", ",", "\"\<\\\\mathrm{(b)}\>\"", ",", 
      "\"\<\\\\mathrm{(c)}\>\"", ",", "\"\<\\\\mathrm{(d)}\>\""}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.851791622669512*^9, 3.851791631354542*^9}, {
  3.8657818219516525`*^9, 3.8657818249054947`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"8677e103-a275-459b-a743-cd16732b0e79"]
}, Open  ]],

Cell[CellGroupData[{

Cell["One time setup for Python", "Section",
 CellChangeTimes->{{3.8421246805518074`*^9, 
  3.842124685572817*^9}},ExpressionUUID->"90765703-226a-412d-8f38-\
2d2e1028c059"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindExternalEvaluators", "[", "\"\<Python\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8421246866458073`*^9, 3.842124686677812*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"fe740601-e783-49bb-801d-abcd085d73d0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "11fa098e-354a-f343-064b-7793f4a51b16" -> <|
        "System" -> "Python", "Version" -> "3.7.3", "Target" :> 
         "C:\\ProgramData\\Anaconda3\\python.exe", "Executable" :> 
         "C:\\ProgramData\\Anaconda3\\python.exe", "Registered" -> True|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "System"} -> 
        1, {All, "Version"} -> 1, {All, "Target"} -> 1, {All, "Executable"} -> 
        1, {All, "Registered"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "System" -> TypeSystem`PackageScope`AtomShape[67.2], "Version" -> 
             TypeSystem`PackageScope`AtomShape[56.00000000000001], "Target" -> 
             TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
             "Executable" -> 
             TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
             "Registered" -> TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 5, {All}]]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "System", "Version", "Target", "Executable", "Registered"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1], 
     "Meta" -> <|HiddenItems -> {"Executable"}|>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "System"} -> 
        1, {All, "Version"} -> 1, {All, "Target"} -> 1, {All, "Executable"} -> 
        1, {All, "Registered"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "System" -> TypeSystem`PackageScope`AtomShape[67.2], "Version" -> 
             TypeSystem`PackageScope`AtomShape[56.00000000000001], "Target" -> 
             TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
             "Executable" -> 
             TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
             "Registered" -> TypeSystem`PackageScope`AtomShape[36]|>], 
           DirectedInfinity[1], 5, {All}]]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "System", "Version", "Target", "Executable", "Registered"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     1, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> <|
      "11fa098e-354a-f343-064b-7793f4a51b16" -> <|
        "System" -> False, "Version" -> False, "Target" -> False, 
         "Executable" -> True, "Registered" -> False|>|>, "UpdateType" -> 1|>,
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["System", 
                  Style[
                  "System", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "System"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "System"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Version", 
                  Style[
                  "Version", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Version"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Version"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Target", 
                  Style[
                  "Target", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Target"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Target"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Annotation[
              Pane[
               Button[
                Tooltip[
                 Mouseover[
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   GrayLevel[0.6]], 
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   RGBColor[
                   0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Executable", 
                    Style[
                    "Executable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Executable"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "Executable"}, "ColumnHeader", True], "Mouse"]], 
                TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                 All, "Executable"}, "remove"], Appearance -> None, BaseStyle -> 
                None], ImageSize -> {{5, Full}, Automatic}, 
               ImageMargins -> {{3, 2}, {0, 0}}], 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
               All, "Executable"}, "ColumnHeader", False], "Mouse"], 
             Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Registered", 
                  Style[
                  "Registered", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Registered"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Registered"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["11fa098e-354a-f343-064b-7793f4a51b16", 
                  Style[
                  "11fa098e-354a-f343-064b-7793f4a51b16", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["11fa098e-354a-f343-064b-7793f4a51b16"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["11fa098e-354a-f343-064b-7793f4a51b16"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Python", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["11fa098e-354a-f343-064b-7793f4a51b16"], 
                 Key["System"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.7.3", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["11fa098e-354a-f343-064b-7793f4a51b16"], 
                 Key["Version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C:\\ProgramData\\Anaconda3\\python.exe", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["11fa098e-354a-f343-064b-7793f4a51b16"], 
                 Key["Target"]}, "Item", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Annotation[
              Pane[
               Button[
                Tooltip[
                 Mouseover[
                  Style[
                  "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]", 
                   GrayLevel[0.6]], 
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   RGBColor[
                   0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                 Annotation["C:\\ProgramData\\Anaconda3\\python.exe", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["11fa098e-354a-f343-064b-7793f4a51b16"], 
                    Key["Executable"]}, "Item", False], "Mouse"]], 
                TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  Key["11fa098e-354a-f343-064b-7793f4a51b16"], 
                  Key["Executable"]}, "remove"], Appearance -> None, 
                BaseStyle -> None], ImageSize -> {{5, Full}, Automatic}, 
               ImageMargins -> {{3, 2}, {0, 0}}], 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                Key["11fa098e-354a-f343-064b-7793f4a51b16"], 
                Key["Executable"]}, "Item", False], "Mouse"], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["11fa098e-354a-f343-064b-7793f4a51b16"], 
                 Key["Registered"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1013., {32.634033098001964`, 38.365966901998036`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1013., {32.634033098001964`, 38.365966901998036`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8421246993003635`*^9, 3.882328849058282*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"9d79f998-5cee-46f1-bad8-654d6c022846"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["One time setup Julia ", "Section",
 CellChangeTimes->{{3.8613683803755074`*^9, 3.861368381086461*^9}, {
  3.861368944877722*^9, 
  3.8613689468527737`*^9}},ExpressionUUID->"20b61676-b68f-42be-b7f0-\
e3221e28cc71"],

Cell[BoxData[
 RowBox[{"FindExternalEvaluators", "[", "\"\<Julia\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8823296977251315`*^9, 3.8823296984646573`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"4382352e-c060-4bd9-85c1-5eee630672ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindExternalEvaluators", "[", "]"}]], "Input",
 CellChangeTimes->{{3.861368595105015*^9, 3.8613686009380484`*^9}, {
  3.8613688137221265`*^9, 3.861368819219525*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"e931e05a-c955-401e-99b8-fe0de3897be1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Python" -> <|
        "11fa098e-354a-f343-064b-7793f4a51b16" -> <|
          "System" -> "Python", "Version" -> "3.7.3", "Target" :> 
           "C:\\ProgramData\\Anaconda3\\python.exe", "Executable" :> 
           "C:\\ProgramData\\Anaconda3\\python.exe", "Registered" -> True|>|>,
        "R" -> <|
        "b8d7b8ae-aa49-359f-8266-cdec257d6266" -> <|
          "System" -> "R", "Version" -> "", "Target" :> 
           "C:\\Users\\Ohdraw.niL\\AppData\\Roaming\\Mathematica\\Paclets\\\
Repository\\RLink-3.4.1\\Java\\REngine.jar", "Executable" :> 
           "C:\\Users\\Ohdraw.niL\\AppData\\Roaming\\Mathematica\\Paclets\\\
Repository\\RLink-3.4.1\\Java\\REngine.jar", "Registered" -> Automatic|>|>, 
       "Julia" -> <|
        "7050323f-ab9c-237d-925f-ded14a32adda" -> <|
          "System" -> "Julia", "Version" -> "1.2.0", "Target" :> 
           "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Julia-1.2.0\\bin\\julia.\
exe", "Executable" :> 
           "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Julia-1.2.0\\bin\\julia.\
exe", "Registered" -> False|>, 
         "1b1de879-0ee6-30c5-8971-55215be83655" -> <|
          "System" -> "Julia", "Version" -> "1.5.3", "Target" :> 
           "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Programs\\Julia 1.5.3\\bin\
\\julia.exe", "Executable" :> 
           "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Programs\\Julia 1.5.3\\bin\
\\julia.exe", "Registered" -> True|>, 
         "fab225f3-ea32-6895-36c5-841036846709" -> <|
          "System" -> "Julia", "Version" -> "1.7.3", "Target" :> 
           "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Programs\\Julia-1.7.3\\bin\
\\julia.exe", "Executable" :> 
           "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Programs\\Julia-1.7.3\\bin\
\\julia.exe", "Registered" -> True|>|>, 
       "Java" -> <|
        "061a01eb-8856-6379-ee3c-5cd7930127e5" -> <|
          "System" -> "Java", "Version" -> "1.0", "Target" :> 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.1\\SystemFiles\\Links\\JLink\\JLink.jar", 
           "Executable" :> 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.1\\SystemFiles\\Links\\JLink\\JLink.jar", 
           "Registered" -> Automatic|>|>, 
       "Ruby" -> <|
        "9007e2a0-4e90-49dd-c1a0-a4c50cd51813" -> <|
          "System" -> "Ruby", "Version" -> "3.1.2", "Target" :> 
           "C:\\Ruby31-x64\\bin\\ruby.exe", "Executable" :> 
           "C:\\Ruby31-x64\\bin\\ruby.exe", "Registered" -> False|>|>, 
       "Shell" -> <|
        "bbeb1511-f960-0712-4f16-e83f725a0006" -> <|
          "System" -> "Shell", "Version" -> Missing["NotAvailable"], "Target" :> 
           "C:\\WINDOWS\\system32\\cmd.exe", "Executable" :> 
           "C:\\WINDOWS\\system32\\cmd.exe", "Registered" -> Automatic|>, 
         "9b1a0b3c-edd4-125d-2ba1-ad97edb63069" -> <|
          "System" -> "Shell", "Version" -> Missing["NotAvailable"], "Target" :> 
           "C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\powershell.exe", 
           "Executable" :> 
           "C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\powershell.exe", 
           "Registered" -> Automatic|>|>, 
       "Jupyter" -> <|
        "fd5ba233-7389-2d84-98af-386288aff95e" -> <|
          "System" -> "Jupyter", "Version" -> "python3", "Target" :> 
           "C:\\ProgramData\\Anaconda3\\share\\jupyter\\kernels\\python3\\\
kernel.json", "Executable" :> 
           "C:\\ProgramData\\Anaconda3\\share\\jupyter\\kernels\\python3\\\
kernel.json", "Registered" -> Automatic|>|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, All, "System"} -> 
        1, {All, All, "Version"} -> 1, {All, All, "Target"} -> 
        1, {All, All, "Executable"} -> 1, {All, All, "Registered"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[<|
               "System" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Version" -> TypeSystem`PackageScope`AtomShape[78.4], 
                "Target" -> TypeSystem`PackageScope`AtomShape[560.], 
                "Executable" -> TypeSystem`PackageScope`AtomShape[560.], 
                "Registered" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 5, {All, All}]]], 2, 
           DirectedInfinity[1], {All}]]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "System", "Version", "Target", "Executable", "Registered"}, {
         TypeSystem`AnyType, 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], TypeSystem`AnyType}], 
        TypeSystem`AnyLength], 7], 
     "Meta" -> <|HiddenItems -> {"Executable"}|>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[<|{
          Key["Julia"], All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {
          Key["Julia"], All, "System"} -> 1, {
          Key["Julia"], All, "Version"} -> 1, {
          Key["Julia"], All, "Target"} -> 1, {
          Key["Julia"], All, "Executable"} -> 1, {
          Key["Julia"], All, "Registered"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "System" -> TypeSystem`PackageScope`UnknownShape[False], 
             "Version" -> 
             TypeSystem`PackageScope`AtomShape[56.00000000000001], "Target" -> 
             TypeSystem`PackageScope`AtomShape[560.], "Executable" -> 
             TypeSystem`PackageScope`AtomShape[560.], "Registered" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 5, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "System", "Version", "Target", "Executable", "Registered"}, {
        TypeSystem`AnyType, 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], TypeSystem`AnyType}], TypeSystem`AnyLength],
      "Path" -> {
       Key["Julia"]}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 5, 
     "DataRowCount" -> 3, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, 
     "HiddenItemsMap" -> <|
      "7050323f-ab9c-237d-925f-ded14a32adda" -> <|
        "System" -> False, "Version" -> False, "Target" -> False, 
         "Executable" -> True, "Registered" -> False|>, 
       "1b1de879-0ee6-30c5-8971-55215be83655" -> <|
        "System" -> False, "Version" -> False, "Target" -> False, 
         "Executable" -> True, "Registered" -> False|>, 
       "fab225f3-ea32-6895-36c5-841036846709" -> <|
        "System" -> False, "Version" -> False, "Target" -> False, 
         "Executable" -> True, "Registered" -> False|>|>, "UpdateType" -> 2|>,
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {
     Key["Julia"]}, TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["System", 
                  Style[
                  "System", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Julia"], All, "System"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], All, "System"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Version", 
                  Style[
                  "Version", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Julia"], All, "Version"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], All, "Version"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Target", 
                  Style[
                  "Target", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Julia"], All, "Target"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], All, "Target"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Annotation[
              Pane[
               Button[
                Tooltip[
                 Mouseover[
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   GrayLevel[0.6]], 
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   RGBColor[
                   0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Executable", 
                    Style[
                    "Executable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Julia"], All, "Executable"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Julia"], All, "Executable"}, "ColumnHeader", True], 
                  "Mouse"]], 
                TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                 "Julia", All, "Executable"}, "remove"], Appearance -> None, 
                BaseStyle -> None], ImageSize -> {{5, Full}, Automatic}, 
               ImageMargins -> {{3, 2}, {0, 0}}], 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
               "Julia", All, "Executable"}, "ColumnHeader", False], "Mouse"], 
             Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Registered", 
                  Style[
                  "Registered", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Julia"], All, "Registered"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], All, "Registered"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["7050323f-ab9c-237d-925f-ded14a32adda", 
                  Style[
                  "7050323f-ab9c-237d-925f-ded14a32adda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Julia"], 
                    Key["7050323f-ab9c-237d-925f-ded14a32adda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["7050323f-ab9c-237d-925f-ded14a32adda"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Julia", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["7050323f-ab9c-237d-925f-ded14a32adda"], 
                 Key["System"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.2.0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["7050323f-ab9c-237d-925f-ded14a32adda"], 
                 Key["Version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Julia-1.2.0\\bin\\julia.\
exe", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["7050323f-ab9c-237d-925f-ded14a32adda"], 
                 Key["Target"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Annotation[
              Pane[
               Button[
                Tooltip[
                 Mouseover[
                  Style[
                  "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]", 
                   GrayLevel[0.6]], 
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   RGBColor[
                   0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                 Annotation[
                 "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Julia-1.2.0\\bin\\\
julia.exe", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Julia"], 
                    Key["7050323f-ab9c-237d-925f-ded14a32adda"], 
                    Key["Executable"]}, "Item", False], "Mouse"]], 
                TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  Key["Julia"], 
                  Key["7050323f-ab9c-237d-925f-ded14a32adda"], 
                  Key["Executable"]}, "remove"], Appearance -> None, 
                BaseStyle -> None], ImageSize -> {{5, Full}, Automatic}, 
               ImageMargins -> {{3, 2}, {0, 0}}], 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                Key["Julia"], 
                Key["7050323f-ab9c-237d-925f-ded14a32adda"], 
                Key["Executable"]}, "Item", False], "Mouse"], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["7050323f-ab9c-237d-925f-ded14a32adda"], 
                 Key["Registered"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["1b1de879-0ee6-30c5-8971-55215be83655", 
                  Style[
                  "1b1de879-0ee6-30c5-8971-55215be83655", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Julia"], 
                    Key["1b1de879-0ee6-30c5-8971-55215be83655"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["1b1de879-0ee6-30c5-8971-55215be83655"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Julia", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["1b1de879-0ee6-30c5-8971-55215be83655"], 
                 Key["System"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.5.3", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["1b1de879-0ee6-30c5-8971-55215be83655"], 
                 Key["Version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Programs\\Julia \
1.5.3\\bin\\julia.exe", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["1b1de879-0ee6-30c5-8971-55215be83655"], 
                 Key["Target"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Annotation[
              Pane[
               Button[
                Tooltip[
                 Mouseover[
                  Style[
                  "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]", 
                   GrayLevel[0.6]], 
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   RGBColor[
                   0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                 Annotation[
                 "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Programs\\Julia \
1.5.3\\bin\\julia.exe", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Julia"], 
                    Key["1b1de879-0ee6-30c5-8971-55215be83655"], 
                    Key["Executable"]}, "Item", False], "Mouse"]], 
                TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  Key["Julia"], 
                  Key["1b1de879-0ee6-30c5-8971-55215be83655"], 
                  Key["Executable"]}, "remove"], Appearance -> None, 
                BaseStyle -> None], ImageSize -> {{5, Full}, Automatic}, 
               ImageMargins -> {{3, 2}, {0, 0}}], 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                Key["Julia"], 
                Key["1b1de879-0ee6-30c5-8971-55215be83655"], 
                Key["Executable"]}, "Item", False], "Mouse"], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["1b1de879-0ee6-30c5-8971-55215be83655"], 
                 Key["Registered"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fab225f3-ea32-6895-36c5-841036846709", 
                  Style[
                  "fab225f3-ea32-6895-36c5-841036846709", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Julia"], 
                    Key["fab225f3-ea32-6895-36c5-841036846709"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["fab225f3-ea32-6895-36c5-841036846709"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Julia", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["fab225f3-ea32-6895-36c5-841036846709"], 
                 Key["System"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.7.3", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["fab225f3-ea32-6895-36c5-841036846709"], 
                 Key["Version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Programs\\Julia-1.7.3\\\
bin\\julia.exe", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["fab225f3-ea32-6895-36c5-841036846709"], 
                 Key["Target"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Annotation[
              Pane[
               Button[
                Tooltip[
                 Mouseover[
                  Style[
                  "\[ThinSpace]\[ThinSpace]\[Bullet]\[ThinSpace]\[ThinSpace]", 
                   GrayLevel[0.6]], 
                  Style["\[ThinSpace]+\[ThinSpace]", 
                   RGBColor[
                   0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                 Annotation[
                 "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Programs\\Julia-1.7.\
3\\bin\\julia.exe", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Julia"], 
                    Key["fab225f3-ea32-6895-36c5-841036846709"], 
                    Key["Executable"]}, "Item", False], "Mouse"]], 
                TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  Key["Julia"], 
                  Key["fab225f3-ea32-6895-36c5-841036846709"], 
                  Key["Executable"]}, "remove"], Appearance -> None, 
                BaseStyle -> None], ImageSize -> {{5, Full}, Automatic}, 
               ImageMargins -> {{3, 2}, {0, 0}}], 
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                Key["Julia"], 
                Key["fab225f3-ea32-6895-36c5-841036846709"], 
                Key["Executable"]}, "Item", False], "Mouse"], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Julia"], 
                 Key["fab225f3-ea32-6895-36c5-841036846709"], 
                 Key["Registered"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1194., {71.13403309800196, 76.86596690199804}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1194., {71.13403309800196, 76.86596690199804}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.861368601547984*^9, {3.8613688149153585`*^9, 3.8613688198319273`*^9}, {
   3.871323672667943*^9, 3.871323681452779*^9}, {3.8713238414705896`*^9, 
   3.8713238560856714`*^9}, 3.8823296420015497`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"82b93042-8a7c-4e1d-a8bd-3871f8c3ac21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegisterExternalEvaluator", "[", 
  RowBox[{
  "\"\<Julia\>\"", ",", 
   "\"\<C:\\\\Users\\\\Ohdraw.niL\\\\AppData\\\\Local\\\\Programs\\\\Julia-1.\
7.3\\\\bin\\\\julia.exe\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8613683826777196`*^9, 3.8613684094005995`*^9}, {
  3.861368664820779*^9, 3.861368697295953*^9}, {3.8613687827135077`*^9, 
  3.861368787617263*^9}, {3.8713239169409323`*^9, 3.871323931346739*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"88fa9f22-f092-4000-9dfb-2cb97e4a7fad"],

Cell[BoxData["\<\"fab225f3-ea32-6895-36c5-841036846709\"\>"], "Output",
 CellChangeTimes->{{3.8613683949834847`*^9, 3.8613684102183695`*^9}, 
   3.8613686675267477`*^9, 3.861368807951841*^9, 3.871323936762779*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"0918e717-0cc2-463e-9d91-5e60b255aa12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{"\"\<Julia\>\"", ",", "\"\<sqrt(36)\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.861368828526337*^9, 3.8613688552837806`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"86e3c6f4-e662-4e26-89c7-faa38578cd09"],

Cell[BoxData[
 TemplateBox[{
  "ExternalEvaluate", "help", 
   "\"For help configuring the \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Julia\\\\\\\"\\\"}]\\) evaluator, see \
\\!\\(\\*TemplateBox[List[\\\"\\\\\\\"Configure Julia for \
ExternalEvaluate\\\\\\\"\\\", \
\\\"paclet:workflow/ConfigureJuliaForExternalEvaluate\\\", \
\\\"paclet:workflow/ConfigureJuliaForExternalEvaluate\\\", \\\"Link\\\", \
List[\\\"HyperlinkActive\\\"], Rule[BaseStyle, List[\\\"Hyperlink\\\"]], \
Rule[Appearance, List[Small, \\\"Frameless\\\"]]], \\\"HyperlinkTemplate\\\"]\
\\).\"", 2, 71, 31, 27691153136419781271, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.882329676649562*^9},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"9a677e06-b0b2-41a3-bdc8-974b61b2f280"],

Cell[BoxData[
 TemplateBox[{
  "ExternalEvaluate", "replFail", 
   "\"The process for external system \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Julia\\\\\\\"\\\"}]\\) \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"C:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Ohdraw.\
niL\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Programs\\\\\\\
\\\\\\\\\\Julia-1.7.3\\\\\\\\\\\\\\\\bin\\\\\\\\\\\\\\\\julia.exe\\\\\\\"\\\"}\
]\\)) failed to start.\"", 2, 71, 32, 27691153136419781271, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8823296767142735`*^9},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"e06af7b3-75a2-4465-a804-00c9a5636021"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Command\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"C:\\\\Users\\\\Ohdraw.niL\\\\AppData\\\\Local\\\\\
Programs\\\\Julia-1.7.3\\\\bin\\\\julia.exe\"", ",", 
                    "\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\
\\\\13.1\\\\SystemFiles\\\\Components\\\\ExternalEvaluate_Julia\\\\Resources\\\
\\start_julia.jl\""}], "}"}], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"StandardError\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"\"", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"ProcessError\"", HoldForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Command\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"C:\\\\Users\\\\Ohdraw.niL\\\\AppData\\\\Local\\\\\
Programs\\\\Julia-1.7.3\\\\bin\\\\julia.exe\"", ",", 
                    "\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\
\\\\13.1\\\\SystemFiles\\\\Components\\\\ExternalEvaluate_Julia\\\\Resources\\\
\\start_julia.jl\""}], "}"}], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"StandardError\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"\"", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"ProcessError\"", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"StandardOutput\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["$Aborted", HoldForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "ProcessError", <|
   "Command" -> {
     "C:\\Users\\Ohdraw.niL\\AppData\\Local\\Programs\\Julia-1.7.3\\bin\\\
julia.exe", 
      "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.1\\SystemFiles\\Components\\ExternalEvaluate_Julia\\\
Resources\\start_julia.jl"}, "StandardError" -> "", 
    "StandardOutput" -> $Aborted|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8613688886229477`*^9, 3.8823296767751627`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"38a84618-a886-41d6-9ac2-b8f9e2d37283"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["One time MaTeX conflict", "Section",
 CellChangeTimes->{{3.8453261184942427`*^9, 
  3.8453261256326046`*^9}},ExpressionUUID->"841be0db-fc7d-4d0e-8694-\
5934490dbd87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Clear", "[", "MaTeX", "]"}]], "Input",
 CellChangeTimes->{{3.8453261279561872`*^9, 3.845326131380799*^9}},
 CellLabel->
  "In[836]:=",ExpressionUUID->"d62423d8-ceee-4b40-b44e-09c20bfcef1e"],

Cell[BoxData[
 TemplateBox[{
  "Clear", "wrsym", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"MaTeX\\\"}]\\) is Protected.\"", 2, 836, 
   128, 27565774687404575676, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.845326132231804*^9, {3.8494937866289597`*^9, 3.849493788630027*^9}, 
   3.8634883201706915`*^9},
 CellLabel->
  "During evaluation of \
In[836]:=",ExpressionUUID->"f7e63374-0e04-4c38-b73e-aae8bc947e2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ColorData", "[", "112", "]"}], "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"Table", "[", 
   RowBox[{"ii", ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8513988102603636`*^9, 3.851398857216217*^9}, {
  3.851398985386309*^9, 3.8513990811834736`*^9}, {3.851399140906369*^9, 
  3.851399150328591*^9}, {3.85139921471066*^9, 3.8513992153730516`*^9}},
 CellLabel->
  "In[727]:=",ExpressionUUID->"15163f3d-0281-4b33-82f9-661b0b18e9d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.790588, 0.201176, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.5270586666666667, 0.13411733333333334`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.790588`", ",", "0.201176`", ",", "0.`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.790588, 0.201176, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.790588, 0.201176, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.192157, 0.388235, 0.807843], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.12810466666666667`, 0.25882333333333335`, 0.538562],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.192157`", ",", "0.388235`", ",", "0.807843`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.192157, 0.388235, 0.807843]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.192157, 0.388235, 0.807843],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.607843, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.4052286666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1.`", ",", "0.607843`", ",", "0.`"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.607843, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.607843, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.596078, 0.109804], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.39738533333333337`, 0.07320266666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.`", ",", "0.596078`", ",", "0.109804`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.596078, 0.109804]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.596078, 0.109804],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.567426, 0.32317, 0.729831], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.378284, 0.21544666666666668`, 0.48655400000000004`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.567426`", ",", "0.32317`", ",", "0.729831`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.567426, 0.32317, 0.729831]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.567426, 0.32317, 0.729831],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.588235, 0.705882], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.39215666666666665`, 0.470588],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.`", ",", "0.588235`", ",", "0.705882`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.588235, 0.705882]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.588235, 0.705882],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8505, 0.4275, 0.13185], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.5670000000000001, 0.28500000000000003`, 0.0879],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.8505`", ",", "0.4275`", ",", "0.13185`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.8505, 0.4275, 0.13185]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8505, 0.4275, 0.13185],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.499929, 0.285875, 0.775177], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.333286, 0.19058333333333333`, 0.5167846666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.499929`", ",", "0.285875`", ",", "0.775177`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.499929, 0.285875, 0.775177]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.499929, 0.285875, 0.775177],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.12490296143062507`, 0.63, 0.47103259454284074`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.08326864095375006, 0.42000000000000004`, 0.3140217296952272],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.12490296143062507`", ",", "0.63`", ",", "0.47103259454284074`"}],
          "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.12490296143062507`, 0.63, 0.47103259454284074`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.12490296143062507`, 0.63, 0.47103259454284074`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.823948950768196, 0.29474475384097976`, 0.19291741323314934`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5492993005121307, 0.19649650256065318`, 0.12861160882209957`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.823948950768196`", ",", "0.29474475384097976`", ",", 
           "0.19291741323314934`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.823948950768196, 0.29474475384097976`, 0.19291741323314934`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.823948950768196, 0.29474475384097976`, 0.19291741323314934`],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.8513988167607064`*^9, 3.8513988577066026`*^9}, {
   3.8513989859669495`*^9, 3.851399081744725*^9}, {3.851399142720473*^9, 
   3.8513991507902927`*^9}, 3.851399215711173*^9},
 CellLabel->
  "Out[727]=",ExpressionUUID->"e39f10ef-558e-4ed4-8637-53d596296c7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", 
  RowBox[{"Notebook", ",", " ", "PrintingStyleEnvironment"}], "]"}]], "Input",
 CellChangeTimes->{{3.860695032931389*^9, 3.8606950426262126`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"a915c8be-24a0-4fd7-ae83-6787aa8e7f13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"PrintingStyleEnvironment", "\[Rule]", "\<\"Working\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.860695040883238*^9, 3.860695068379678*^9}, 
   3.8634882282393565`*^9, {3.863489317956464*^9, 3.86348932834953*^9}, 
   3.863524442620932*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"f10873ac-3493-4a7e-a013-f7ce000fedee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "Black", "}"}], "~", "Join", "~", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "112", "]"}], "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"Table", "[", 
     RowBox[{"ii", ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "1", ",", 
        RowBox[{"alphaLen", "-", "1"}]}], "}"}]}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.865774512094541*^9, 3.8657745505662165`*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"61a69e4f-d53a-42e0-922a-74f9a945288a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.790588, 0.201176, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.5270586666666667, 0.13411733333333334`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.790588`", ",", "0.201176`", ",", "0.`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.790588, 0.201176, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.790588, 0.201176, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.192157, 0.388235, 0.807843], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.12810466666666667`, 0.25882333333333335`, 0.538562],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.192157`", ",", "0.388235`", ",", "0.807843`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.192157, 0.388235, 0.807843]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.192157, 0.388235, 0.807843],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.607843, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.4052286666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1.`", ",", "0.607843`", ",", "0.`"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.607843, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.607843, 0.],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.8657745274447846`*^9, 3.8657745513546224`*^9}},
 CellLabel->
  "Out[709]=",ExpressionUUID->"4bdfec09-dece-432e-a2a7-4529ee2afb9a"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{589.5, 404.25},
WindowMargins->{{-735.75, Automatic}, {Automatic, 68.25}},
Magnification:>1. Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a19fef12-c4d5-44aa-ae27-791851ddc741"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 154, 3, 67, "Section",ExpressionUUID->"17dbb4a9-2205-4ae3-b65e-1ac14b8e021f"],
Cell[CellGroupData[{
Cell[759, 29, 171, 3, 54, "Subsection",ExpressionUUID->"eae6b6e0-d891-4fac-ad15-2eac6f36386b"],
Cell[933, 34, 317, 6, 28, "Input",ExpressionUUID->"53dc3f67-2ce9-4343-95c4-12164358077b"],
Cell[1253, 42, 642, 15, 86, "Input",ExpressionUUID->"f6f60b82-47bc-4ecd-9090-14240a1fd3aa"],
Cell[1898, 59, 969, 25, 105, "Input",ExpressionUUID->"434ba847-9258-49cd-aa8c-195907357adc"],
Cell[2870, 86, 632, 15, 48, "Input",ExpressionUUID->"384abfbc-3060-4eca-b1af-f42e04ab007a"],
Cell[3505, 103, 642, 15, 48, "Input",ExpressionUUID->"af677797-8695-4a50-b829-ef362edccaa5"],
Cell[4150, 120, 643, 16, 48, "Input",ExpressionUUID->"3a5b11c8-d0d6-4e1d-8e75-f81db6d5205c"],
Cell[4796, 138, 702, 16, 86, "Input",ExpressionUUID->"7ab87c4b-e3e5-4bed-b56f-9b8b774a3d0a"],
Cell[5501, 156, 466, 10, 48, "Input",ExpressionUUID->"49ecd47d-4719-4620-9c88-d34fe8354dda"],
Cell[CellGroupData[{
Cell[5992, 170, 220, 3, 28, "Input",ExpressionUUID->"89d65ea3-6c91-45f3-86ce-7aa385b9142e"],
Cell[6215, 175, 1793, 25, 32, "Output",ExpressionUUID->"a4976105-9a9d-45a1-bff4-dbf684d01dd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8045, 205, 300, 7, 28, "Input",ExpressionUUID->"75ced92a-2e08-4f98-8656-73fc8cc3b092"],
Cell[8348, 214, 1702, 28, 28, "Message",ExpressionUUID->"c2e39243-262e-4e8c-a066-0166ddc9fe9a"],
Cell[10053, 244, 1801, 25, 32, "Output",ExpressionUUID->"1b06dc66-d079-43d1-854b-6aedb1333fe0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11891, 274, 218, 3, 28, "Input",ExpressionUUID->"080ec37f-d44c-42da-b2d5-56d555aad453"],
Cell[12112, 279, 926, 13, 32, "Output",ExpressionUUID->"7de42d1f-7e53-4db0-b65c-74caa40a626d"]
}, Open  ]],
Cell[13053, 295, 673, 16, 67, "Input",ExpressionUUID->"d921310e-6a17-4731-92a1-bb5aa8c8c64f"],
Cell[13729, 313, 3984, 90, 428, "Input",ExpressionUUID->"bfd8653e-e62c-4354-a8bf-673cdbbae475"],
Cell[17716, 405, 2602, 58, 219, "Input",ExpressionUUID->"18d198c6-3928-4fae-9736-a357bdcfe224"],
Cell[20321, 465, 2867, 70, 304, "Input",ExpressionUUID->"86af4e76-cd23-495a-baf1-bd9fdf49d730"],
Cell[23191, 537, 1004, 26, 132, "Input",ExpressionUUID->"71b7b3cf-0225-4404-bc6d-6e2ccbd147c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24232, 568, 180, 3, 54, "Subsection",ExpressionUUID->"965319da-5eeb-4358-b2cf-bf9cc8ad291c"],
Cell[24415, 573, 1545, 37, 143, "Input",ExpressionUUID->"2b022311-aa99-44bd-8f39-dbce27c19356"],
Cell[25963, 612, 391, 9, 28, "Input",ExpressionUUID->"cc007882-350c-4897-a127-87b3695d4b3f"],
Cell[26357, 623, 474, 11, 48, "Input",ExpressionUUID->"cc96c2c5-2116-4505-9907-ba5064e1706d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26868, 639, 162, 3, 54, "Subsection",ExpressionUUID->"a7ea7af9-e44d-47e2-9643-b0dc728ea490"],
Cell[27033, 644, 867, 24, 67, "Input",ExpressionUUID->"43c74271-d349-470a-b0e6-71112cc0dd9c"],
Cell[27903, 670, 781, 21, 48, "Input",ExpressionUUID->"9eb360e6-524e-4737-818a-4efff29d5b9c"],
Cell[28687, 693, 991, 24, 95, "Input",ExpressionUUID->"8a6ac6b6-7dde-41df-aba6-7fefaf53adfb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29727, 723, 162, 3, 67, "Section",ExpressionUUID->"e34f42be-c76c-4099-b140-baaa24e3023a"],
Cell[CellGroupData[{
Cell[29914, 730, 370, 7, 28, "Input",ExpressionUUID->"008d6b79-a114-4f3a-aeed-33b8ddc7f684"],
Cell[30287, 739, 1805, 25, 32, "Output",ExpressionUUID->"1681ff48-a89a-4a63-ad2b-32c801b07afc"]
}, Open  ]],
Cell[32107, 767, 1198, 20, 48, "Input",ExpressionUUID->"51631f1d-373e-4306-ac4c-da9622763a88"],
Cell[CellGroupData[{
Cell[33330, 791, 463, 11, 67, "Input",ExpressionUUID->"1a47d839-8d04-42ba-be50-f66e7b30f54e"],
Cell[33796, 804, 892, 14, 32, "Output",ExpressionUUID->"66c311b0-b30b-4bbf-9c87-1e950227c014"]
}, Open  ]],
Cell[34703, 821, 954, 22, 67, "Input",ExpressionUUID->"63e8211c-668a-4792-bbaf-e7b022a84e71"],
Cell[35660, 845, 1380, 29, 162, "Input",ExpressionUUID->"58c0709b-769a-475d-91bd-fc09a0310565"],
Cell[37043, 876, 590, 15, 28, "Input",ExpressionUUID->"7714404d-17f0-42ef-b3cc-6f1d82641ace"],
Cell[37636, 893, 199, 3, 28, "Input",ExpressionUUID->"167e8407-505f-4875-94f1-a95313d4dd9c"],
Cell[CellGroupData[{
Cell[37860, 900, 348, 7, 28, "Input",ExpressionUUID->"b2874e24-0800-42d8-a9d8-3d209bae2d17"],
Cell[38211, 909, 1412, 28, 109, "Output",ExpressionUUID->"b5f45526-75b3-4935-a506-f65e1aeda6d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39660, 942, 586, 9, 28, "Input",ExpressionUUID->"042688be-73a4-4df2-9689-7a863c99e11e"],
Cell[40249, 953, 1937, 33, 109, "Output",ExpressionUUID->"38007c3e-725e-4910-9ac1-bc5c283a305b"]
}, Open  ]],
Cell[42201, 989, 344, 7, 28, "Input",ExpressionUUID->"9a910975-402b-479b-8722-092477c08978"],
Cell[42548, 998, 595, 11, 48, "Input",ExpressionUUID->"bf33b9f8-c486-44bc-a945-984e60cbbba0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43180, 1014, 169, 3, 67, "Section",ExpressionUUID->"31ea896f-e0e7-4d42-92e6-eea6d780b751"],
Cell[43352, 1019, 281, 6, 28, "Input",ExpressionUUID->"35589180-b598-4001-bc20-e067313333dc"],
Cell[43636, 1027, 328, 7, 28, "Input",ExpressionUUID->"3955dd41-c553-4655-8b0a-ce1ff7c72d35"],
Cell[43967, 1036, 291, 6, 28, "Input",ExpressionUUID->"202ca8a4-a0f5-4997-b5ac-bbc80677351c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44295, 1047, 166, 3, 67, "Section",ExpressionUUID->"1132cae1-448c-4f34-84d3-7a39324c80ff"],
Cell[44464, 1052, 479, 11, 48, "Input",ExpressionUUID->"8188c136-72b0-49ac-9de0-e265336fb249"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44980, 1068, 166, 3, 67, "Section",ExpressionUUID->"0075eb51-89fc-405f-8715-0beb51b55792"],
Cell[45149, 1073, 539, 10, 28, "Input",ExpressionUUID->"cc838347-a540-4cc6-b15c-2c02196b655a"],
Cell[45691, 1085, 401, 8, 48, "Input",ExpressionUUID->"cea2f6d5-e576-40d1-b118-0d51607e3efb"],
Cell[46095, 1095, 807, 16, 124, "Input",ExpressionUUID->"504a753d-e24c-40ca-8066-351c918c5c34"],
Cell[46905, 1113, 243, 5, 28, "Input",ExpressionUUID->"25c0cc05-a550-4b72-a0b7-2d2aae4daf29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47185, 1123, 165, 3, 67, "Section",ExpressionUUID->"cfa3a635-c940-49ff-b88b-c177e0afe115"],
Cell[47353, 1128, 914, 24, 105, "Input",ExpressionUUID->"9c3b6c32-7690-43be-85ba-9d75a0928538"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48304, 1157, 208, 4, 67, "Section",ExpressionUUID->"b5e16e8e-42d8-4475-947a-430adea71b48"],
Cell[48515, 1163, 605, 15, 67, "Input",ExpressionUUID->"8677e103-a275-459b-a743-cd16732b0e79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49157, 1183, 172, 3, 67, "Section",ExpressionUUID->"90765703-226a-412d-8f38-2d2e1028c059"],
Cell[CellGroupData[{
Cell[49354, 1190, 234, 3, 28, "Input",ExpressionUUID->"fe740601-e783-49bb-801d-abcd085d73d0"],
Cell[49591, 1195, 39207, 704, 90, "Output",ExpressionUUID->"9d79f998-5cee-46f1-bad8-654d6c022846"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88847, 1905, 219, 4, 67, "Section",ExpressionUUID->"20b61676-b68f-42be-b7f0-e3221e28cc71"],
Cell[89069, 1911, 236, 3, 28, "Input",ExpressionUUID->"4382352e-c060-4bd9-85c1-5eee630672ff"],
Cell[CellGroupData[{
Cell[89330, 1918, 268, 4, 28, "Input",ExpressionUUID->"e931e05a-c955-401e-99b8-fe0de3897be1"],
Cell[89601, 1924, 57237, 1053, 167, "Output",ExpressionUUID->"82b93042-8a7c-4e1d-a8bd-3871f8c3ac21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146875, 2982, 518, 9, 67, "Input",ExpressionUUID->"88fa9f22-f092-4000-9dfb-2cb97e4a7fad"],
Cell[147396, 2993, 292, 3, 32, "Output",ExpressionUUID->"0918e717-0cc2-463e-9d91-5e60b255aa12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147725, 3001, 266, 4, 28, "Input",ExpressionUUID->"86e3c6f4-e662-4e26-89c7-faa38578cd09"],
Cell[147994, 3007, 783, 16, 47, "Message",ExpressionUUID->"9a677e06-b0b2-41a3-bdc8-974b61b2f280"],
Cell[148780, 3025, 654, 13, 63, "Message",ExpressionUUID->"e06af7b3-75a2-4465-a804-00c9a5636021"],
Cell[149437, 3040, 6760, 142, 176, "Output",ExpressionUUID->"38a84618-a886-41d6-9ac2-b8f9e2d37283"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[156246, 3188, 172, 3, 67, "Section",ExpressionUUID->"841be0db-fc7d-4d0e-8694-5934490dbd87"],
Cell[CellGroupData[{
Cell[156443, 3195, 213, 4, 28, "Input",ExpressionUUID->"d62423d8-ceee-4b40-b44e-09c20bfcef1e"],
Cell[156659, 3201, 433, 11, 28, "Message",ExpressionUUID->"f7e63374-0e04-4c38-b73e-aae8bc947e2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157129, 3217, 555, 13, 28, "Input",ExpressionUUID->"15163f3d-0281-4b33-82f9-661b0b18e9d5"],
Cell[157687, 3232, 17900, 481, 32, "Output",ExpressionUUID->"e39f10ef-558e-4ed4-8637-53d596296c7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175624, 3718, 269, 5, 28, "Input",ExpressionUUID->"a915c8be-24a0-4fd7-ae83-6787aa8e7f13"],
Cell[175896, 3725, 367, 8, 32, "Output",ExpressionUUID->"f10873ac-3493-4a7e-a013-f7ce000fedee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176300, 3738, 544, 15, 48, "Input",ExpressionUUID->"61a69e4f-d53a-42e0-922a-74f9a945288a"],
Cell[176847, 3755, 6889, 188, 32, "Output",ExpressionUUID->"4bdfec09-dece-432e-a2a7-4529ee2afb9a"]
}, Open  ]]
}, Open  ]]
}
]
*)

